<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>KIERAN&#39;S BLOG</title>
  <subtitle>Always Creative.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://go.kieran.top/"/>
  <updated>2017-01-15T16:48:57.000Z</updated>
  <id>http://go.kieran.top/</id>
  
  <author>
    <name>Kieran</name>
    <email>i@kieran.top</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>都是 Edge(IE) 缓存惹的祸</title>
    <link href="http://go.kieran.top/post/40/"/>
    <id>http://go.kieran.top/post/40/</id>
    <published>2017-01-15T14:58:19.000Z</published>
    <updated>2017-01-15T16:48:57.000Z</updated>
    
    <content type="html">&lt;p&gt;上周某天上班的时候，突然后端同志私戳我，&lt;br&gt;&lt;img src=&quot;http://kieran-hexo.qiniudn.com/hexo_40_1.png&quot; width=&quot;350px&quot;&gt;&lt;br&gt;当时我正研究着另一个项目的PSD，内心认真规划着整个项目的代码结构，指尖流淌出迷人的键盘音……&lt;br&gt;好吧，其实内心想着中午吃什么菜，喝什么汤&lt;img src=&quot;http://kieran-hexo.qiniudn.com/hexo_40_2.gif&quot; width=&quot;30px&quot;&gt;&lt;br&gt;仔细一看，第一反应是，&lt;img src=&quot;http://kieran-hexo.qiniudn.com/hexo_bq_22.jpeg&quot; width=&quot;50px&quot;&gt;怎么可能。于是爸爸我连忙打开虚拟机中滴 Win10，等待 Win10 爷爷慢悠悠的进入待机状态。迅速点开 Edge 。&lt;br&gt;打开网页和 network 控制台，迅速进入调试状态。&lt;br&gt;一点退出登录，“啪”一个退出请求出现在 network 里，账号也随之退出。这…不是很正常嘛？？？&lt;img src=&quot;http://kieran-hexo.qiniudn.com/hexo_bq_21.jpeg&quot; width=&quot;50px&quot;&gt; 哦，是第二次，于是爸爸再次登录，点击退出。嗯？点击退出。嗯？点击退出。嗯？？？&lt;img src=&quot;http://kieran-hexo.qiniudn.com/hexo_bq_18.jpeg&quot; width=&quot;30px&quot;&gt;&lt;br&gt;为什么页面只是刷新了一下而没有退出？？？&lt;br&gt;看看 network ，空空如也。&lt;br&gt;同样的操作在 Chrome 下，正常  &lt;/p&gt;
&lt;p&gt;&lt;b&gt;当时我的反应是——我可能打开的是假 Edge &lt;img src=&quot;http://kieran-hexo.qiniudn.com/hexo_40_3.jpeg&quot; width=&quot;150px&quot;&gt;&lt;/b&gt;  &lt;/p&gt;
&lt;p&gt;根据之前的表现（就是点完页面刷新了一下），我一开始假设 Edge 下 a 标签 href 里写 javascript:; 不起作用，还是会跳转，于是绑定的事件也没用了。但是一看代码，好像不对。来，看代码：&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$(&#39;.J_exit&#39;).on(&#39;click&#39;, function () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $.get(&#39;/ajax/exit.do, function () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        location.reload();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;点击退出按钮的时候请求退出接口，后端会删除对应的 session，然后前端刷新下也没，cookie 没有对应的 session 于是会跳到登录页，从逻辑上来说，没毛病。&lt;br&gt;所以排除我刚刚的假设，&lt;b&gt;那会不会是缓存问题呢？&lt;/b&gt;刚想到这里……&lt;br&gt;就看到两个人气势汹汹的往我这来，是后端GG和测试MM，两人过来把我团团围住，“Hey，boy，Edge 的 Bug 改的怎么样了？”&lt;br&gt;我当时的表情是这样的，&lt;img src=&quot;http://kieran-hexo.qiniudn.com/hexo_bq_16.gif&quot; width=&quot;50px&quot;&gt; 这好像才过去三分钟，你两怎么就过来了？？？&lt;img src=&quot;http://kieran-hexo.qiniudn.com/hexo_bq_21.jpeg&quot; width=&quot;50px&quot;&gt; 爸爸才刚打开虚拟机！&lt;br&gt;咦，不对，重点是，为啥你两亲自跑过来了？&lt;img src=&quot;http://kieran-hexo.qiniudn.com/hexo_bq_3.jpeg&quot; width=&quot;50px&quot;&gt; 宝宝很惶恐啊，有事私戳我就行了，没必要兴师动众的。由于我还没验证出 bug 原因，都是猜测，于是保守的说还母鸡呀。然后说了一堆有的没的，就走了，走了，了 &lt;img src=&quot;http://kieran-hexo.qiniudn.com/hexo_bq_22.jpeg&quot; width=&quot;50px&quot;&gt; 哦，后台GG走之前意味深长的跟我说了句，可能是浏览器缓存问题。嘴角带着邪魅的笑，大概是这种 &lt;img src=&quot;http://kieran-hexo.qiniudn.com/hexo_bq_13.gif&quot; width=&quot;50px&quot;&gt;。&lt;br&gt;&lt;img src=&quot;http://kieran-hexo.qiniudn.com/hexo_bq_22.jpeg&quot; width=&quot;50px&quot;&gt;&lt;img src=&quot;http://kieran-hexo.qiniudn.com/hexo_bq_22.jpeg&quot; width=&quot;50px&quot;&gt;&lt;img src=&quot;http://kieran-hexo.qiniudn.com/hexo_bq_22.jpeg&quot; width=&quot;50px&quot;&gt;爸爸刚想测。于是爸爸在请求后面加了时间戳参数，第二次请求成功的发出去了。但是还是得向后台GG表示“感谢” &lt;img src=&quot;http://kieran-hexo.qiniudn.com/hexo_bq_9.jpeg&quot; width=&quot;50px&quot;&gt;&lt;br&gt;事后搜了下，发现 &lt;b&gt;IE 浏览器对于没有明确表明是否缓存（强制缓存或者强制不缓存），默认的设置是“自动 automatically”，即在不关闭浏览器的情况下（同一个会话），刷新页面，对于相同url的请求并不会再次发送（即请求被缓存了）&lt;/b&gt;，而 Edge 延续了 IE 这种“优良”的传统，坚决和主流浏览器保持“差异性”，所以会出现上面第二次请求退出接口的时候，请求都没有发出，直接就执行 location.reload() 了。  &lt;/p&gt;
&lt;p&gt;&lt;b&gt;最后只想 po 一张图，自己体会&lt;/b&gt;&lt;br&gt;&lt;img src=&quot;http://kieran-hexo.qiniudn.com/hexo_40_0.jpeg&quot; width=&quot;350px&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;上周某天上班的时候，突然后端同志私戳我，&lt;br&gt;&lt;img src=&quot;http://kieran-hexo.qiniudn.com/hexo_40_1.png&quot; width=&quot;350px&quot;&gt;&lt;br&gt;当时我正研究着另一个项目的PSD，内心认真规划着整个项目的代码结构，指尖流淌出
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>挑食，不挑食</title>
    <link href="http://go.kieran.top/post/39/"/>
    <id>http://go.kieran.top/post/39/</id>
    <published>2016-11-25T11:11:47.000Z</published>
    <updated>2016-12-05T13:27:31.000Z</updated>
    
    <content type="html">&lt;p&gt;“长大以后终于知道大人为什么不挑食。&lt;br&gt;因为他们买菜的时候就只买自己吃的。”  &lt;/p&gt;
&lt;p&gt;最近，我发现我似乎“被”变挑食了。&lt;br&gt;从来没有觉得自己挑食，以往在学校也是自己点自己喜欢吃的，所以也不会点了这个菜却不吃。但是在公司就不一样，菜是搭配好的，平均每份2~3个菜，也许其中只有1~2个菜是我的口味。只吃我爱吃的菜就能满足我的这顿餐，那个我不爱的菜自然被剩下了。&lt;br&gt;好吧，可能这就是挑食。&lt;br&gt;西兰花，花菜，豆芽菜，莴苣…这些以往我都是吃的，虽然谈不上多喜爱，但也没有那么讨厌。但公司的厨师似乎有一种神奇的魔力，总能把我不讨厌的菜做成我讨厌的样子。&lt;br&gt;有讨厌的自然有喜欢的，罗列一下我还有点印象有点意思的东西。&lt;br&gt;鸡米花，这个菜其实我是拒绝的，第一次吃完就被我拉黑的东西。不过我的小伙伴对其钟爱无比，有鸡米花必排之。然后我发现，他每次都会倒很多的番茄酱，鸡米花混上番茄酱，味道果然美味许多。&lt;br&gt;芝麻糊，嘿哈，如果不想白了少年头，这个简直是早上必喝啊。&lt;br&gt;虾，嘿，这是我唯一觉得烧的比较正常的菜了。不管是清蒸还是红烧还是爆炒，味道都不错。我可以只吃虾这一个菜吃一顿饭&lt;br&gt;xx鱼片，忘了，反正味道还行，只吃过一次。&lt;br&gt;猪肉粽，好久没吃到了，难道是我来的太晚了？&lt;br&gt;银耳蜜枣汤，甜。&lt;br&gt;甜牛奶，这个是早上的，出没规律我还没摸清…偶尔能遇见，真是可遇不可求…&lt;br&gt;…   &lt;/p&gt;
&lt;p&gt;讲讲一些我不爱吃的：&lt;br&gt;芹菜，黑名单 number one 的东西，馄饨里面放一点点作为调料我都受不了，让这种植物灭绝吧~~&lt;br&gt;酸，如果想杀死我，只需要倒一碗醋摆在我的面前…醋的挥发性极强，倒在碗里，整个空气都弥漫着醋味。我也不知道为什么，一闻到浓烈的醋味就想呕吐。有一次去康师傅吃番茄牛肉面，那番茄的味道，真是纯正的不行不行，那碗面，我只吃了一小口，差点吐了。有次看到一个新闻，一小伙点了一堆海鲜，吃的撑的不行了还剩一些海鲜没吃，他不想浪费于是硬着头皮继续吃，结果把胃给撑破了。人呢，吃不下就不要勉强自己，胃破了看个病的医药钱比剩的粮食可贵多了。&lt;br&gt;巧克力，有时候有些挑食的习惯是后天养成的。小时候，某一年，突然所有的喜糖都变成了巧克力，不管是办什么喜事，全 TM 分巧克力！！！一包糖！8 粒！！！全是巧克力！！！我有整整一箱子的巧克力！！！一开始我还吃的津津有味，到后来每天我都在犯愁怎么吃巧克力。我还试过泡巧克力茶！！！后来，自然你懂的，感觉看见巧克力就有点反胃。虽然味道还不错，可是，吃下去就有种，你懂的，心理的抗拒反应。&lt;br&gt;鱼豆腐，这东西很奇怪，我也不知道为什么讨厌，我觉得是先天的，吃进去就反胃。豆腐臭豆腐什么的都没事，只有鱼豆腐，我自己都觉得奇怪，从小吃了那么多豆腐，到大一第一次吃鱼豆腐竟然差点吐了，我都被我自己的反应给惊呆了。&lt;br&gt;大部分生的肉，现在可不是远古时期，我可不想变成茹毛饮血的怪人。&lt;br&gt;…&lt;br&gt;学校的酸辣粉，“老板来份酸辣粉，不要酸不要辣~”&lt;br&gt;玉米与豌豆，很奇怪，这两样总是放一起烧，害的我每次都把玉米挑出来吃，剩下一坨绿绿的。  &lt;/p&gt;
&lt;p&gt;综上，嗯，其实我不太挑了，什么东西都能吃。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;“长大以后终于知道大人为什么不挑食。&lt;br&gt;因为他们买菜的时候就只买自己吃的。”  &lt;/p&gt;
&lt;p&gt;最近，我发现我似乎“被”变挑食了。&lt;br&gt;从来没有觉得自己挑食，以往在学校也是自己点自己喜欢吃的，所以也不会点了这个菜却不吃。但是在公司就不一样，菜是搭配好的，平均每份2~3
    
    </summary>
    
    
      <category term="Misc" scheme="http://go.kieran.top/tags/Misc/"/>
    
  </entry>
  
  <entry>
    <title>怪诞人生</title>
    <link href="http://go.kieran.top/post/38/"/>
    <id>http://go.kieran.top/post/38/</id>
    <published>2016-11-14T16:48:08.000Z</published>
    <updated>2016-11-17T18:31:29.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;关于电影&quot;&gt;&lt;a href=&quot;#关于电影&quot; class=&quot;headerlink&quot; title=&quot;关于电影&quot;&gt;&lt;/a&gt;关于电影&lt;/h3&gt;&lt;p&gt;“每个人都有自己对战争的理解，对电影也一样。”  &lt;/p&gt;
&lt;p&gt;上面这句话来自李安《比利·林恩的中场战事》的结尾，比利对着镜头，像是对这部电影前面的总结，也像是李安的喃喃自语。有一种高处不胜寒的孤寂感。&lt;br&gt;影片一开始，就是一个超大光圈的镜头，全片多处用了大光圈来虚化背景，这在电影里很不常见，会降低电影的感觉，但在这部倾向于个人叙事视角的电影里，多了几分真实。纵观整部影片，你会发现全片的光线都是很亮的那种，但是又不会显得突兀，包括舞台上，房屋内，所有的光线都看起来那么自然。玩过摄像机和单反的人都知道，同样的环境下，摄像机的画面是偏暗的，单反的进光量比摄像机多很多，如果是日常个人拍摄，在没有打光人员的情况下，往往用单反的拍摄效果要好于摄像机。影片中要营造出那种很明亮又很自然的光线，不得不说，这片的打光绝对是顶级的。&lt;br&gt;舞台的灯光其实很难控制，我在舞台下拍摄过舞台的节目，从下往上录制演员的脸相对比较容易，因为聚光灯打在演员的脸上，非常的清晰，只要稍加调控就好，但是影片中有大量比利从舞台上往下看观众的镜头，我有幸上过一次舞台，当前面的聚光灯打在我的脸上的时候，事实上我是完全看不到观众的，前面的斜上方几个大聚光灯，像太阳一样耀眼，下面却是漆黑一片，只能听见掌声和心跳，那种感觉很奇妙，上过舞台的人可能都会上瘾。反正我上瘾了。  &lt;/p&gt;
&lt;p&gt;说回比利，这里其实有几个镜头不是很好，比如在台上时，有一个镜头是围绕着比利转了一又四分之三圈，这给我的感觉很突兀，为什么不完整的转两圈呢？转到四分之三时突然切掉，而且旋转的镜头有轻微的抖动，在 60 帧（我看的 60 帧版本）下显得格外清晰，这镜头给我的感觉就是，为了秀一把 120 帧下镜头快速移动的优越感。影片中其实有多处移动拍摄的场景，大多是以比利为第一视角，李安真的很会选择。用移动的镜头以第一人称视角拍比利，会给人更深的沉浸感，而且又恰到好处的展示了移动场景在 120 帧下的真实效果。&lt;br&gt;技术在其次，电影表达的想法才是真正值得被揣摩的。  &lt;/p&gt;
&lt;p&gt;有几个很有意思的场景  &lt;/p&gt;
&lt;p&gt;一是舞台放烟花的时候，比利和他同伴看到的却是战场上的各式导弹，流弹。这是创伤后应激障碍的一种，看到这里其实感觉很可笑，有点感同身受，当然我不是上战场，而是所学专业遗留下来的“习惯”，这里不便多说，有兴趣的话我们可以私下聊，如果你认识我的话。  &lt;/p&gt;
&lt;p&gt;二是比利和拉拉队美女的告别，比利的内心其实想留下，但是拉拉队美女很诧异他有这样的想法，于是比利假装开玩笑。看到这里其实很清楚了，拉拉队美女并不爱他，只是因为他是英雄，和他谈恋爱她回去可以和别人吹牛比。一旦他不是英雄，变回普通人，便会失去她的“爱”。而他的姐姐从一开始就让比利留下，因为她知道战场很危险，回去可能再也回不来了，那些荣耀能比比利活着更重要？但是结尾的时候比利选择回战场的时候，姐姐也只能尊重比利的选择，但这是亲情的爱。我认为，真正的爱情，从来不是电光火石之间就会产生的，所谓的一见钟情只是初始的好感度起点比较高罢了，要达到爱情的程度还需一些经历。  &lt;/p&gt;
&lt;p&gt;三是 “这感觉其实挺奇怪的,有人来表扬你这辈子最惨的一天。“ 看台词就足够悲伤了。  &lt;/p&gt;
&lt;p&gt;四是令我最难受的一个场景，最后比利和他同伴走在过道里的时候遭遇了之前在片场有冲突的两人的埋伏，这两人叫了一帮混混，按正常英雄电影的套路，绝对是应该比利冲上去干他们一顿，事实却是被按在地上。然而这确实符合事实，那大汉这么强壮，即使你是大兵，在徒手状态下被按住，几乎不可能挣脱，很无力，很难过。李安就是这样，赤裸裸的把现实拍给你看。&lt;/p&gt;
&lt;h3 id=&quot;关于我&quot;&gt;&lt;a href=&quot;#关于我&quot; class=&quot;headerlink&quot; title=&quot;关于我&quot;&gt;&lt;/a&gt;关于我&lt;/h3&gt;&lt;p&gt;前面的关于电影都是 shit, 有时候觉得自己真是一台电脑，看电影的时候无时无刻不在分析打光，镜头，演员微表情，etc…什么时候养成这些习惯的呢？大概是大一，从加入**影像工作室开始。那时觉得自己未来会当一名编剧，导演之类，拍一部票房口碑爆棚的电影，拍出来后手捧奥斯卡金像奖，走上人生巅峰。好吧，其实没想那么多，当时加入这个社团只是觉得很酷。社团招新时各种显示器，摄像机摆在外面，十米摇杆吓得新人都不敢靠近，团长一脸冷酷的表情。Fine, 加入后才知道，显示器和摄像机都是临时借来的，整个社团在我加入前只有8个人，刚成立不到一年，感觉入了一个坑。  &lt;/p&gt;
&lt;p&gt;刚开始的时候做的是编剧，模仿着当时很火的万万没想到写了一些逗逼的剧本，也有比较正经的剧本，但是后来都没有拍了，原因有很多，暂此不表。  &lt;/p&gt;
&lt;p&gt;后来去拍摄组，一开始拍学校晚会，刚开始很不解学长为何总是带着大耳机拍摄，后来才发现，带着耳机好像比较酷。开玩笑，其实是为了隔离外部环境，一是拍摄时周围都是人的嘈杂声，很难专注，二是容易拍着拍着和周围的熟人聊天…原谅我的不称职。总是拍晚会未免有些无聊，于是社长大手一挥，决定再也不接学校的晚会，要拍一些自己原创的东西。  &lt;/p&gt;
&lt;p&gt;最后一个接的是拍外国留学生秋游，嗯，没错，我被派去跟拍了。免费秋游。九溪，山清水秀，茶水之乡，走在山间的小路上，看着田里的人采着茶叶，的确很诗意。但前提是没有带笨重的摄像机！！！我们两人各扛一台摄像机一路爬山涉水的跟拍这群不老实的老外。至于三公斤还是六公斤重的脚架，还是继续躺车里吧。有一个黑人特别活跃，一路唱着rap，hey，快拍我，我最帅，yoyoyo，切克闹! Fine, 你的镜头够多了，拜托，我们还要拍别的！其中有一个老外的中文说的特别溜，我们找他单独去小竹林拍了一段。后来发生一件有趣的事，中饭时间，一个老外不吃，I asked, 为什么你不吃？He said, he didn’t like Chinese food. I said, maybe you can try it today, it’s delicious. He said, 他试过几次，但都不好吃。说完他走了出去，我的内心是Orz，Fine，国际友人。我跟着他出去了，走着走着，他突然说，I like Chinese girl.They are pretty! 我突然不知道怎么接话，我想起之前看到的一篇文章Chinese girl is easy. 其实大部分在国外混得很差的老外甚至在那边都混不下去的来中国好像都能混的很好，随便说几句中文，似乎都能把他们捧上天了，做一些出格的事，或者脚踏几只船，似乎大家都觉得这是文化差异。什么时候我们对外国人的容忍度这么高了？交友的准则还是得一视同仁。  &lt;/p&gt;
&lt;p&gt;最近和一个俄罗斯人聊川普和希拉里，她特别支持川普，因为川普亲俄，希拉里可能会和俄罗斯爆发冲突。我说我看了新闻，川普和奥巴马交接期间，美国种族歧视的问题越发严重，白人打黑人小孩以至于黑人小孩都不敢来上学。其实这是常态，每一届总统上任期间都会发生这种事，都是不支持这届总统的人们搞出来的。本来也就这样，但是跟我聊天的俄罗斯人说 She do not feel sorry of them,white people hit by other black people before…还有一些话浓浓的种族歧视味。可能在中国感受不到，以为种族歧视好像世界上凤毛麟角了，但大部分白人优人一等的自我感觉一直存在。按她的逻辑，作为黄种人的我似乎也是劣等人种？跟她争论了半天，最后我实在懒得吵下去，for me,it’s not important. I don’t care 川普 and 希拉里, 但她竟然冒出来句：I like argue with people. 嗯聊了两个月的朋友感觉要闹掰了，摊手。  &lt;/p&gt;
&lt;p&gt;抱歉，跑题了。不过似乎也没有主题。  &lt;/p&gt;
&lt;p&gt;后来学了点剪辑，对着一秒 24 帧，三分钟的 MV 就是 4320 帧，但实际素材却有几个小时的活默默发呆。剪视频不仅要有创意，更重要的是耐心和细致，偶尔看到做视频剪辑的学长们时常为了剪片子而出去开房熬夜（学校23点熄灯断电），看清楚这条路不适合我后，我选择了逃离。很狼狈。&lt;br&gt;期间当了几次演员，其实当演员还是比较开心的，毕竟没心没肺，说什么台词做什么事，都是戏。不用考虑后期剪辑，不用考虑剧本和经费。&lt;br&gt;第一次当演员比较惨，演了一个被毒死的 people，就是中毒后走着走着支撑不住倒地那种，拍了好几条，摔得我遍体鳞伤。但，镜头还算多。磕磕绊绊，演了一些作品，后来，演了一部比较有意思的微电影，拿了个省一等奖。算是演艺生涯比较完美的告别。  &lt;/p&gt;
&lt;p&gt;朋友圈依然会看到那些为了梦想而努力的朋友，有在新浪跟拍记者的，有在二更施展才华的，也有还在熬夜做剪辑偶尔发个葛优瘫的。  &lt;/p&gt;
&lt;p&gt;人生其实就是一本剧本，每个人都是一名编剧，写什么剧情随你，唯一不同的是，写完没法后悔了。&lt;br&gt;平平淡淡的剧情容易掌控，跌宕起伏的剧情充满不确定性。如果是你，会写哪种剧本呢？&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;关于电影&quot;&gt;&lt;a href=&quot;#关于电影&quot; class=&quot;headerlink&quot; title=&quot;关于电影&quot;&gt;&lt;/a&gt;关于电影&lt;/h3&gt;&lt;p&gt;“每个人都有自己对战争的理解，对电影也一样。”  &lt;/p&gt;
&lt;p&gt;上面这句话来自李安《比利·林恩的中场战事》的结尾，比利对着
    
    </summary>
    
      <category term="Misc" scheme="http://go.kieran.top/categories/Misc/"/>
    
    
      <category term="Misc" scheme="http://go.kieran.top/tags/Misc/"/>
    
      <category term="关于我" scheme="http://go.kieran.top/tags/%E5%85%B3%E4%BA%8E%E6%88%91/"/>
    
      <category term="电影" scheme="http://go.kieran.top/tags/%E7%94%B5%E5%BD%B1/"/>
    
      <category term="战争" scheme="http://go.kieran.top/tags/%E6%88%98%E4%BA%89/"/>
    
  </entry>
  
  <entry>
    <title>一张 CD 的动画</title>
    <link href="http://go.kieran.top/post/37/"/>
    <id>http://go.kieran.top/post/37/</id>
    <published>2016-05-10T08:01:05.000Z</published>
    <updated>2016-05-18T04:27:22.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://kieran-hexo.qiniudn.com/hexo_37.gif&quot; alt=&quot;晴天CD&quot;&gt;&lt;br&gt;两个 Div 实现的动画&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;cd&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;music&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;为什么要写这个呢？&lt;br&gt;答案是 玩&lt;br&gt;没错 就是玩…&lt;br&gt;可能脑抽吧&lt;br&gt;其实我发现 CSS 动画真的很好玩！&lt;br&gt;可以实现一些炫酷的效果&lt;br&gt;接下来我会继续写几个好玩的 Demo&lt;br&gt;补充下我并不充实的 CSS3 动画知识…&lt;br&gt;玩并快乐的学习~&lt;br&gt;代码请戳下面&lt;br&gt;&lt;a href=&quot;http://codepen.io/_kieran/pen/QNRmep&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://codepen.io/_kieran/pen/QNRmep&lt;/a&gt;&lt;br&gt;原理很简单&lt;br&gt;CD 只要用到了 box-shadow 来实现光盘面 文字分别用 before after 伪类&lt;br&gt;两个音符也是一个 div 上的伪类&lt;br&gt;CD 加上无限旋转的动画&lt;br&gt;音符加上 translate rotate 实现慢慢摇摆上升&lt;br&gt;再用透明度实现渐隐渐现就 OK 了  &lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://kieran-hexo.qiniudn.com/hexo_37.gif&quot; alt=&quot;晴天CD&quot;&gt;&lt;br&gt;两个 Div 实现的动画&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=
    
    </summary>
    
    
      <category term="CSS3" scheme="http://go.kieran.top/tags/CSS3/"/>
    
  </entry>
  
  <entry>
    <title>Mongoose 学习笔记</title>
    <link href="http://go.kieran.top/post/36/"/>
    <id>http://go.kieran.top/post/36/</id>
    <published>2016-05-08T08:01:05.000Z</published>
    <updated>2016-05-08T11:13:37.000Z</updated>
    
    <content type="html">&lt;p&gt;老是忘记，既然这样，就写篇文章记录下自己常用的用法吧&lt;br&gt;碰到新的用法，随时保持更新  &lt;/p&gt;
&lt;h3 id=&quot;Schema&quot;&gt;&lt;a href=&quot;#Schema&quot; class=&quot;headerlink&quot; title=&quot;Schema&quot;&gt;&lt;/a&gt;Schema&lt;/h3&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; mongoose = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;mongoose&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; Schema = mongoose.Schema;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; blogSchema = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Schema(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  title:  &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  author: &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  body:   &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  comments: [&amp;#123; body: &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;, date: &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt; &amp;#125;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  date: &amp;#123; type: &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;.now &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  hidden: &lt;span class=&quot;built_in&quot;&gt;Boolean&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  votes: &lt;span class=&quot;built_in&quot;&gt;Number&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  meta: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    createAt: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      type: &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;.now()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    updateAt: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      type: &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;.now()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;blogSchema.pre(&lt;span class=&quot;string&quot;&gt;&#39;save&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;next&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.isNew) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.meta.creatAt = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.meta.updateAt = &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;.now();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.meta.updateAt = &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;.now();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  next();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = mongoose.model(&lt;span class=&quot;string&quot;&gt;&#39;Blog&#39;&lt;/span&gt;, blogSchema);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;新建&quot;&gt;&lt;a href=&quot;#新建&quot; class=&quot;headerlink&quot; title=&quot;新建&quot;&gt;&lt;/a&gt;新建&lt;/h3&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; _blog = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Blog(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  title:  &lt;span class=&quot;string&quot;&gt;&#39;美好的一天&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  author: &lt;span class=&quot;string&quot;&gt;&#39;Kieran&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  body:   &lt;span class=&quot;string&quot;&gt;&#39;啊！今天真美好~&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; promise = _blog.save();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;promise.then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;doc&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  assert.equal(doc.author, &lt;span class=&quot;string&quot;&gt;&#39;Kieran&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;查询-Query&quot;&gt;&lt;a href=&quot;#查询-Query&quot; class=&quot;headerlink&quot; title=&quot;查询 Query&quot;&gt;&lt;/a&gt;查询 Query&lt;/h3&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;findById() &lt;span class=&quot;comment&quot;&gt;// 略&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;findOne() &lt;span class=&quot;comment&quot;&gt;// 略&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// find()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; promise = Blog.find(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    body: &lt;span class=&quot;regexp&quot;&gt;/美好/&lt;/span&gt;,  &lt;span class=&quot;comment&quot;&gt;// 正则查询&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    votes: &amp;#123; $gt: &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;, $lte: &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt; &amp;#125;, &lt;span class=&quot;comment&quot;&gt;// 投票数 大于22 小于等于100&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    author: &amp;#123; $&lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&#39;Kieran&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;XXX&#39;&lt;/span&gt;] &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;).&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  sort(&amp;#123; date: &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;, title: &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt; &amp;#125;). &lt;span class=&quot;comment&quot;&gt;// 排序 先按 date 排序, date 一样再按 title 排序&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  skip(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;). &lt;span class=&quot;comment&quot;&gt;// 分页，第三页&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  limit(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;). &lt;span class=&quot;comment&quot;&gt;// 取十条&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  select(&lt;span class=&quot;string&quot;&gt;&#39;title author body&#39;&lt;/span&gt;). &lt;span class=&quot;comment&quot;&gt;// 只取 title author body 字段&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  exec();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;更新-update&quot;&gt;&lt;a href=&quot;#更新-update&quot; class=&quot;headerlink&quot; title=&quot;更新 update&quot;&gt;&lt;/a&gt;更新 update&lt;/h3&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; query = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 详细的更新操作请看这个 https://docs.mongodb.com/manual/reference/operator/update/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; update = &amp;#123; &lt;span class=&quot;comment&quot;&gt;// update 可同时设置多种类型的更新&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  $set: &amp;#123; &lt;span class=&quot;comment&quot;&gt;// 普通更新&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    title: &lt;span class=&quot;string&quot;&gt;&#39;啦啦啦&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  $inc: &amp;#123; &lt;span class=&quot;comment&quot;&gt;// 相当于 votes += 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    votes: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Valid options:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;safe (boolean) safe mode (defaults to value set in schema (true))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;upsert (boolean) whether to create the doc if it doesn&#39;t match (false)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;multi (boolean) whether multiple documents should be updated (false)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;runValidators: if true, runs update validators on this command. Update validators validate the update operation against the model&#39;s schema.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;setDefaultsOnInsert: if this and upsert are true, mongoose will apply the defaults specified in the model&#39;s schema if a new document is created. This option only works on MongoDB &amp;gt;= 2.4 because it relies on MongoDB&#39;s $setOnInsert operator.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;strict (boolean) overrides the strict option for this update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;overwrite (boolean) disables update-only mode, allowing you to overwrite the doc (false)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;**/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; option = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  upsert: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// 如果文档里没有则新建，感觉这个可以替代了 save 了...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; promise = Blog.update(query, update, option).exec();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;删除-remove&quot;&gt;&lt;a href=&quot;#删除-remove&quot; class=&quot;headerlink&quot; title=&quot;删除 remove()&quot;&gt;&lt;/a&gt;删除 remove()&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var promise = Blog.remove(&amp;#123; _id: id &amp;#125;).exec(); // 略了&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;统计-count&quot;&gt;&lt;a href=&quot;#统计-count&quot; class=&quot;headerlink&quot; title=&quot;统计 count()&quot;&gt;&lt;/a&gt;统计 count()&lt;/h3&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; promise = Blog.count(&amp;#123; author: &lt;span class=&quot;string&quot;&gt;&#39;Kieran&#39;&lt;/span&gt; &amp;#125;).exec();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;未完待续也可能不续&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;老是忘记，既然这样，就写篇文章记录下自己常用的用法吧&lt;br&gt;碰到新的用法，随时保持更新  &lt;/p&gt;
&lt;h3 id=&quot;Schema&quot;&gt;&lt;a href=&quot;#Schema&quot; class=&quot;headerlink&quot; title=&quot;Schema&quot;&gt;&lt;/a&gt;Schema&lt;/h3&gt;&lt;fig
    
    </summary>
    
    
      <category term="Mogoose" scheme="http://go.kieran.top/tags/Mogoose/"/>
    
  </entry>
  
  <entry>
    <title>在 Coding 使用 Webhook 实现自动部署</title>
    <link href="http://go.kieran.top/post/35/"/>
    <id>http://go.kieran.top/post/35/</id>
    <published>2016-04-05T15:49:39.000Z</published>
    <updated>2016-04-20T11:00:40.000Z</updated>
    
    <content type="html">&lt;p&gt;最近碰到这样的一个需求，就是本地提交代码到 git 仓库以后需要网站远程自动同步代码。&lt;br&gt;因为项目不便公开，所以 Coding 的免费的私有仓库成了首选&lt;br&gt;看了下 Coding 的 webhook 正好能满足这个需求。既然如此，那我们先来看下 Webhook 的概念吧  &lt;/p&gt;
&lt;h3 id=&quot;WebHook&quot;&gt;&lt;a href=&quot;#WebHook&quot; class=&quot;headerlink&quot; title=&quot;WebHook&quot;&gt;&lt;/a&gt;WebHook&lt;/h3&gt;&lt;p&gt;Webhook 允许第三方应用监听 Coding.net 上的特定事件，在这些事件发生时通过 HTTP POST 方式通知( 超时5秒) 到第三方应用指定的 Web URL。 例如项目有新的内容 Push，或是 Merge Request 有更新等。 WebHook 可方便用户实现自动部署，自动测试，自动打包，监控项目变化等。  &lt;/p&gt;
&lt;p&gt;Webhook 的每个 POST 请求都有包含特殊的 Header, 默认超时时间为 2s&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Header  说明&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;X-Coding-Event  事件名（例如: push, Merge Request, Task）&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;大致原理就是 push 代码到 Coding 后，Coding 向我的服务器 post ，然后我的服务器接收到后就会执行响应的操作。每个 POST 请求都有包含特殊的 Header 里面有事件名，可以依据这个来判断是什么事件，另外为了防止伪造， post 里还包含了 Token  &lt;/p&gt;
&lt;p&gt;好了，接下来进行实际演示吧。  &lt;/p&gt;
&lt;h3 id=&quot;第一步&quot;&gt;&lt;a href=&quot;#第一步&quot; class=&quot;headerlink&quot; title=&quot;第一步&quot;&gt;&lt;/a&gt;第一步&lt;/h3&gt;&lt;p&gt;既然是私有项目，要想 git pull 下来，肯定要配置 ssh key 了&lt;br&gt;但是服务器上的 ssh 又不想让它有完全的权限，毕竟你总不可能在服务器上改代码然后 push 到 Coding 上吧。&lt;br&gt;好在 Coding 提供了项目部署公钥设置，对项目只拥有读权限，这样相对来说比较安全&lt;br&gt;&lt;img src=&quot;//kieran-hexo.qiniudn.com/hexo_35_1.png&quot; alt=&quot;部署公钥&quot;&gt;&lt;br&gt;看上图，新建一个部署公钥，填入你服务器上的 ssh-rsa 公钥后就是上面的样子了  &lt;/p&gt;
&lt;h3 id=&quot;第二步&quot;&gt;&lt;a href=&quot;#第二步&quot; class=&quot;headerlink&quot; title=&quot;第二步&quot;&gt;&lt;/a&gt;第二步&lt;/h3&gt;&lt;p&gt;在你的项目里加入 webhook 的操作，比如 Nodejs 的 Express 项目是加入类似下面代码&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; exec = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;child_process&#39;&lt;/span&gt;).exec;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;router.post(&lt;span class=&quot;string&quot;&gt;&#39;/webhook&#39;&lt;/span&gt;, (req, res) =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&#39;hooks&#39;&lt;/span&gt; === req.body[&lt;span class=&quot;string&quot;&gt;&#39;token&#39;&lt;/span&gt;]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    exec(&lt;span class=&quot;string&quot;&gt;&#39;git pull&#39;&lt;/span&gt;, &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;cwd&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;/home/kieran/projects/app&#39;&lt;/span&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      (error, stdout, stderr) =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;stdout========================\n&#39;&lt;/span&gt; + stdout);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;stderr========================\n&#39;&lt;/span&gt; + stderr);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (error !== &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          res.send(&lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;pre&amp;gt;fail!!!\n&#39;&lt;/span&gt; + stdout + error + &lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;/pre&amp;gt;&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          res.send(&lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;pre&amp;gt;done!!!\n&#39;&lt;/span&gt; + stdout + &lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;/pre&amp;gt;&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39; failed token &#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    res.send(&lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;pre&amp;gt;token不正确?&amp;lt;/pre&amp;gt;&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这里有一点要注意一下，child_process 模块的 exec 命令执行时的第二个参数中，cwd 表示命令执行的目录，一开始我写的是’~/projects/app’, 然后死活没反应，折腾了 N 久，感觉不会再爱了。谨记，这里的 cwd 只能用绝对路径，不能用家路径的简写。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;第三步&quot;&gt;&lt;a href=&quot;#第三步&quot; class=&quot;headerlink&quot; title=&quot;第三步&quot;&gt;&lt;/a&gt;第三步&lt;/h3&gt;&lt;p&gt;好了，服务器操作写完了，只要再在 Coding 上填一下服务器地址和 Token 就行了&lt;br&gt;&lt;img src=&quot;//kieran-hexo.qiniudn.com/hexo_35_2.png&quot; alt=&quot;Webhook&quot;&gt;&lt;br&gt;地址是 服务器 Webhook 地址 比如我是 &lt;a href=&quot;http://12x.xxx.xxx.xxx/webhook&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://12x.xxx.xxx.xxx/webhook&lt;/a&gt;, Token 随便自己填一个，别被别人猜出来就行，填完点一下测试，会向你的服务器 post 一下，这时你的服务器就行自动 git pull 了！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      Kieran
    
    </summary>
    
      <category term="Misc" scheme="http://go.kieran.top/categories/Misc/"/>
    
    
      <category term="Webhook" scheme="http://go.kieran.top/tags/Webhook/"/>
    
  </entry>
  
  <entry>
    <title>网站速度优化（一）——Express中间件摆放顺序之坑</title>
    <link href="http://go.kieran.top/post/34/"/>
    <id>http://go.kieran.top/post/34/</id>
    <published>2016-03-15T16:23:07.000Z</published>
    <updated>2016-04-15T03:45:24.000Z</updated>
    
    <content type="html">&lt;p&gt;为什么我写的Express服务静态资源访问速度这么慢？？？&lt;br&gt;直接把这个问题放进百度当然是没有答案的&lt;br&gt;准确的说是没有准确的答案&lt;br&gt;谷歌之 依然无果&lt;br&gt;翻译成英文再搜&lt;br&gt;最上面一条是StackoverFlow的&lt;br&gt;上面的人提了和我一样的问题&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;Node.js + Express.js very slow serving static files&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;回答是&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;I had exactly the same issue. I just moved to a place with a pretty bad internet connection. Loading time of static files in my node.js app increased to more then 40s per file.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I just moved the static middleware&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.use(express.static(__dirname + &amp;apos;/public&amp;apos;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;to the top of app.configure function, before all the other app.* calls.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;It&amp;apos;s now working significantly faster.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;没错，就是把&lt;code&gt;app.use(express.static(__dirname + ‘/public’));&lt;/code&gt;这句代码放到app.configure的最上面！！！  &lt;/p&gt;
&lt;h3 id=&quot;But-Why&quot;&gt;&lt;a href=&quot;#But-Why&quot; class=&quot;headerlink&quot; title=&quot;But Why?&quot;&gt;&lt;/a&gt;But Why?&lt;/h3&gt;&lt;p&gt;仔细思考下就知道了，客户端请求进入Express后，是按中间件的摆放顺序从上往下执行的，一开始我是放在最底下的，真的！最底下！我也不知道为什么我要放在最底下，反正我就是放在最底下了，也没人告诉我放最底下不好….TAT&lt;br&gt;放在最底下也就意味着静态资源请求进入Express后，先要经过bodyParser,session,cookie,passport等一系列中间件才会返回…饶了一大圈，静态资源完全没有必要经过这些中间件，移到最上面后果然&lt;br&gt;速度也没变多少……&lt;br&gt;看来问题不在这里&lt;br&gt;还是上面的StackOverFlow, 答题者和问题者在下面互回了好几条，挺搞笑的&lt;br&gt;下面又说了一种方案&lt;br&gt;在中间件开始处添加&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;app.use(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;req, res, next&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  req.connection.setNoDelay(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  next();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这是什么呢？我谷歌了下，大概了解了下，服务器为了提高性能，会合并小的请求，等数据包达到一定大小或者超过40ms才会返回给客户端，如果设置了上面的代码就不会合并小的请求但是也不会等40ms才返回了&lt;br&gt;很显然这也不是我想要的答案。&lt;br&gt;说实话，很奇怪平时也是这样写的，放在服务器上反应都很快，这次却很慢，写到这里我感觉问题不是出在服务器上，而是前端的代码上。&lt;br&gt;再从服务器端追查也是没有结果了，还是早点睡吧，明天还有早课。改天再看看。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      Kieran
    
    </summary>
    
      <category term="Node.js" scheme="http://go.kieran.top/categories/Node-js/"/>
    
    
      <category term="Node.js" scheme="http://go.kieran.top/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>React Native Android在Windows下的踩坑之旅</title>
    <link href="http://go.kieran.top/post/33/"/>
    <id>http://go.kieran.top/post/33/</id>
    <published>2015-12-23T16:32:43.000Z</published>
    <updated>2015-12-23T17:40:08.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://kieran-hexo.qiniudn.com/hexo_33_1.jpg&quot; alt=&quot;React Native&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;直接开始&quot;&gt;&lt;a href=&quot;#直接开始&quot; class=&quot;headerlink&quot; title=&quot;直接开始&quot;&gt;&lt;/a&gt;直接开始&lt;/h3&gt;&lt;p&gt;环境搭建在网上有很多教程，不过还是推荐去看官方文档 &lt;a href=&quot;https://facebook.github.io/react-native/docs/android-setup.html#content&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://facebook.github.io/react-native/docs/android-setup.html#content&lt;/a&gt;  ， 当然，照着文档来还是会有很多问题，就我搭建的过程而言，简直就是一步三个坑，这里官方文档上有的我就一笔带过了，详细讲讲我遇到的一些坑，相信这些大家更有用一些。  &lt;/p&gt;
&lt;h3 id=&quot;坑一：Android-SDK&quot;&gt;&lt;a href=&quot;#坑一：Android-SDK&quot; class=&quot;headerlink&quot; title=&quot;坑一：Android SDK&quot;&gt;&lt;/a&gt;坑一：Android SDK&lt;/h3&gt;&lt;p&gt;之前安装过Android Studio，自然也安装过Android SDK，环境变量也设置了，并且我也确定一切都没有错。可是TM执行 react-native run-android 的时候就是报错，就是找不到SDK！于是找到这哥们的文章，腾讯的，链接如下：&lt;a href=&quot;http://www.alloyteam.com/2015/10/react-native-android-steps-on-tour，&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.alloyteam.com/2015/10/react-native-android-steps-on-tour，&lt;/a&gt;&lt;br&gt;说是找不到android-sdk环境变量的时候，可以单独在项目根目录下，新建一个local.propertites文件，添加sdk.dir=你的android的sdk目录，然后再运行react-native run-android，报错依旧。你妹妹的！Google了半天，无果，这是连个SDK都设置不好的节奏？抓耳挠腮半天，突然觉得把local.propertites文件移进android目录里有戏，结果真的有戏！终于找到SDK了！谢天谢地！之前查stackoverflow都是说把这个文件放进root项目根目录里，最后其实是放进项目的android目录，这坑可真不浅啊~~索性咱成功填了哈。  &lt;/p&gt;
&lt;h3 id=&quot;坑二：fail-to-find-Build-Tools-revision-23-0-1&quot;&gt;&lt;a href=&quot;#坑二：fail-to-find-Build-Tools-revision-23-0-1&quot; class=&quot;headerlink&quot; title=&quot;坑二：fail to find Build Tools revision 23.0.1&quot;&gt;&lt;/a&gt;坑二：fail to find Build Tools revision 23.0.1&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://kieran-hexo.qiniudn.com/hexo_33_2.png&quot; alt=&quot;fail to find Build Tools&quot;&gt;&lt;br&gt;这其实不算坑，是我自己把自己坑了，看官方文档的时候没看清楚，下了个Build Tools revision 23.0.2。没事，打开SDK manager，下一个23.0.1版本的Build Tools就好。SDK manager的设置里可以设置代理，你懂的。  &lt;/p&gt;
&lt;h3 id=&quot;坑三：Could-not-download-xxx-google-code…&quot;&gt;&lt;a href=&quot;#坑三：Could-not-download-xxx-google-code…&quot; class=&quot;headerlink&quot; title=&quot;坑三：Could not download xxx.google.code…&quot;&gt;&lt;/a&gt;坑三：Could not download xxx.google.code…&lt;/h3&gt;&lt;p&gt;继续执行一次 react-native run-android , 哦 又报错了&lt;br&gt;&lt;img src=&quot;http://kieran-hexo.qiniudn.com/hexo_33_3.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;无法下载xxx….看这域名就知道是被墙了，挂个vpn，起~&lt;/p&gt;
&lt;h3 id=&quot;坑四：start&quot;&gt;&lt;a href=&quot;#坑四：start&quot; class=&quot;headerlink&quot; title=&quot;坑四：start&quot;&gt;&lt;/a&gt;坑四：start&lt;/h3&gt;&lt;p&gt;谢天谢地！终于看到成功的字样了！&lt;br&gt;&lt;img src=&quot;http://kieran-hexo.qiniudn.com/hexo_33_4.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;让我们把镜头转到模拟器上，起了？&lt;br&gt;&lt;img src=&quot;http://kieran-hexo.qiniudn.com/hexo_33_5.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;起了？嗯？好像有点不对？红红的一大片怎么也不像成功的样子….好像漏了什么….&lt;br&gt;对了，就是 react-native start !&lt;br&gt;&lt;img src=&quot;http://kieran-hexo.qiniudn.com/hexo_33_6.png&quot; alt=&quot;&quot;&gt;  &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://kieran-hexo.qiniudn.com/hexo_33_7.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;好了！总算圆满了~~&lt;br&gt;不对！还差一点&lt;del&gt;~&lt;br&gt;&lt;img src=&quot;http://kieran-hexo.qiniudn.com/hexo_33_8.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;在程序员的世界，学习一门新语言的潜规则是第一句代码向这门语言问好，这是一个初学者的礼貌，也是对前人的尊敬。&lt;br&gt;接下来，就是新的世界了&lt;/del&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      Kieran
    
    </summary>
    
      <category term="React" scheme="http://go.kieran.top/categories/React/"/>
    
    
      <category term="React" scheme="http://go.kieran.top/tags/React/"/>
    
      <category term="React Native" scheme="http://go.kieran.top/tags/React-Native/"/>
    
      <category term="Android" scheme="http://go.kieran.top/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>让 WebStorm 支持 ECMAScript 6 和 JSX</title>
    <link href="http://go.kieran.top/post/32/"/>
    <id>http://go.kieran.top/post/32/</id>
    <published>2015-12-05T14:05:56.000Z</published>
    <updated>2015-12-05T14:24:42.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://kieran-hexo.qiniudn.com/hexo_32_1.png&quot; alt=&quot;expression expected&quot;&gt;&lt;br&gt;Oh shit! WebStrom竟然不支持ES6？！&lt;br&gt;别闹！怎么可能！！！&lt;br&gt;当然不可能了&lt;br&gt;经过我一番捣鼓终于发现了在设置里的小秘密…&lt;br&gt;看下图&lt;br&gt;&lt;img src=&quot;http://kieran-hexo.qiniudn.com/hexo_32_2.png&quot; alt=&quot;JSX Setting&quot;&gt;&lt;br&gt;默认是 ECMAScript 5.1 的语法支持&lt;br&gt;要想 WebStrom 的代码提示和静态语法检测支持 ES6 和 JSX 得在 setting 里把 JavaScript language version 改成 JSX harmony&lt;br&gt;如果你不写 JSX 可以改成 ECMAScript 6，JSX是JS的超集，已经包含了ES6，而且我平常会写点React，所以这里我选了 JSX harmony&lt;br&gt;好了，改完就过静态语法检测了！！！又可以愉快的打代码了~~&lt;br&gt;&lt;img src=&quot;http://kieran-hexo.qiniudn.com/hexo_32_3.png&quot; alt=&quot;ECMAScript 6&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      Kieran
    
    </summary>
    
      <category term="JavaScript" scheme="http://go.kieran.top/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://go.kieran.top/tags/JavaScript/"/>
    
      <category term="WebStrom" scheme="http://go.kieran.top/tags/WebStrom/"/>
    
  </entry>
  
  <entry>
    <title>[转] JavaScript 开发者经常忽略或误用的七个基础知识点</title>
    <link href="http://go.kieran.top/post/31/"/>
    <id>http://go.kieran.top/post/31/</id>
    <published>2015-12-04T01:23:41.000Z</published>
    <updated>2015-12-04T10:19:04.000Z</updated>
    
    <content type="html">&lt;p&gt;Original: 7 &lt;a href=&quot;http://tech.pro/tutorial/1453/7-javascript-basics-many-developers-aren-t-using-properly&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;JavaScript Basics Many Developers Aren’t Using (Properly)&lt;/a&gt;&lt;br&gt;Translated by: &lt;a href=&quot;https://github.com/cssmagic&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;cssmagic&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JavaScript, at its base, is a simple language that we continue to evolve with intelligent, flexible patterns. We’ve used those patterns in JavaScript frameworks which fuel our web applications today. Lost in JavaScript framework usage, which many new developers are thrust right into, are some of the very useful JavaScript techniques that make basic tasks possible. Here are seven of those basics:&lt;/p&gt;
&lt;p&gt;JavaScript 本身可以算是一门简单的语言，但我们也不断用智慧和灵活的模式来改进它。昨天我们将这些模式应用到了 JavaScript 框架中，今天这些框架又驱动了我们的 Web 应用程序。很多新手开发者被各种强大的 JavaScript 框架吸引进来，但他们却忽略了框架身后浩如星海的 JavaScript 实用技巧。本文将为你呈献其中七个基础知识点：&lt;/p&gt;
&lt;h2 id=&quot;1-String-prototype-replace-g-and-i-Flags&quot;&gt;&lt;a href=&quot;#1-String-prototype-replace-g-and-i-Flags&quot; class=&quot;headerlink&quot; title=&quot;1. String.prototype.replace: /g and /i Flags&quot;&gt;&lt;/a&gt;1. String.prototype.replace: /g and /i Flags&lt;/h2&gt;&lt;h3 id=&quot;1-在-String-prototype-replace-方法中使用-g-和-i-标志位&quot;&gt;&lt;a href=&quot;#1-在-String-prototype-replace-方法中使用-g-和-i-标志位&quot; class=&quot;headerlink&quot; title=&quot;1. 在 String.prototype.replace 方法中使用 /g 和 /i 标志位&quot;&gt;&lt;/a&gt;1. 在 String.prototype.replace 方法中使用 /g 和 /i 标志位&lt;/h3&gt;&lt;p&gt;One surprise to many JavaScript newbies is that String’s replace method doesn’t replace all occurrences of the needle – just the first occurrence. Of course seasoned JavaScript vets know that a regular expression and the global flag (/g) need to be used:&lt;/p&gt;
&lt;p&gt;令很多 JavaScript 初学者意外的是，字符串的 replace 方法并不会 替换所有匹配的子串——而仅仅替换第一次匹配。当然 JavaScript 老手们都知道这里可以使用正则表达式，并且需要加上一个全局标志位（/g）：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// Mistake&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 踩到坑了&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var str = &amp;quot;David is an Arsenal fan, which means David is great&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;str.replace(&amp;quot;David&amp;quot;, &amp;quot;Darren&amp;quot;); // &amp;quot;Darren is an Arsenal fan, which means David is great&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// Desired&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 符合预期&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;str.replace(/David/g, &amp;quot;Darren&amp;quot;); // &amp;quot;Darren is an Arsenal fan, which means Darren is great&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Another basic logical mistake is not ignoring case when case is not critical to the validation (letters may be uppercase or lowercase), so the /i flag is also useful:&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;另一个基本的逻辑错误就是在大小写不敏感的校验场合（字母可大写可小写）没有忽略大小写，此时 /i 标志位就很实用：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;str.replace(/david/gi, &amp;quot;Darren&amp;quot;); // &amp;quot;Darren will always be an Arsenal fan, which means Darren will always be great&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;（译注：上面这段例程我没有看懂用意，可能是注释有误吧……）&lt;/p&gt;
&lt;p&gt;Every JavaScript developer has been bitten by each of the flags in the past – so be sure to use them when when appropriate!&lt;/p&gt;
&lt;p&gt;每个 JavaScript 开发者都曾踩过这两个标志位的坑——因此别忘了在适当的时候用上它们！&lt;/p&gt;
&lt;h2 id=&quot;2-Array-Like-Objects-and-Array-prototype-slice&quot;&gt;&lt;a href=&quot;#2-Array-Like-Objects-and-Array-prototype-slice&quot; class=&quot;headerlink&quot; title=&quot;2. Array-Like Objects and Array.prototype.slice&quot;&gt;&lt;/a&gt;2. Array-Like Objects and Array.prototype.slice&lt;/h2&gt;&lt;h3 id=&quot;2-类数组对象和-Array-prototype-slice-方法&quot;&gt;&lt;a href=&quot;#2-类数组对象和-Array-prototype-slice-方法&quot; class=&quot;headerlink&quot; title=&quot;2. 类数组对象和 Array.prototype.slice 方法&quot;&gt;&lt;/a&gt;2. 类数组对象和 Array.prototype.slice 方法&lt;/h3&gt;&lt;p&gt;Array’s slice method is principally for grabbing segments of an array. What many developers don’t know is that slice can be used to covert Array-like objects like arguments, NodeLists, and attributes into true arrays of data:&lt;/p&gt;
&lt;p&gt;数组的 slice 方法通常用来从一个数组中抽取片断。但很多开发者不了解的是，这个方法还可以用来将“类数组”元素（比如 arguments 参数列表、节点列表和属性列表）转换成真正的数组：（译注：DOM 元素的属性列表通过 attributes 属性获取，比如 document.body.attributes。）&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var nodesArr = Array.prototype.slice.call(document.querySelectorAll(&amp;quot;div&amp;quot;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// &amp;quot;true&amp;quot; array of DIVs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 得到一个由 div 元素组成的“真正的”数组&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var argsArr = Array.prototype.slice.call(arguments);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// changes arguments to &amp;quot;true&amp;quot; array&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 把 arguments 转换成一个“真正的”数组&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;You can even clone an array using a simple slice call:&lt;/p&gt;
&lt;p&gt;你还可以使用一次简单的 slice 调用来克隆一个数组：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var clone = myArray.slice(0); // naive clone&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                              // 浅克隆&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;（译注：这里的参数 0 也可以省略，我估计 undefined 被 slice 方法自动转换为 0 了吧。）&lt;/p&gt;
&lt;p&gt;Array.prototype.slice is an absolute gem in the world of JavaScript, one that even novice JavaScript developers don’t know the full potential of.&lt;/p&gt;
&lt;p&gt;Array.prototype.slice 绝对是 JavaScript 世界中的一玫珍宝，但 JavaScript 初学者们显然还没有意识到它的全部潜力。&lt;/p&gt;
&lt;h2 id=&quot;3-Array-prototype-sort&quot;&gt;&lt;a href=&quot;#3-Array-prototype-sort&quot; class=&quot;headerlink&quot; title=&quot;3. Array.prototype.sort&quot;&gt;&lt;/a&gt;3. Array.prototype.sort&lt;/h2&gt;&lt;h3 id=&quot;3-Array-prototype-sort-方法&quot;&gt;&lt;a href=&quot;#3-Array-prototype-sort-方法&quot; class=&quot;headerlink&quot; title=&quot;3. Array.prototype.sort 方法&quot;&gt;&lt;/a&gt;3. Array.prototype.sort 方法&lt;/h3&gt;&lt;p&gt;The Array sort method is vastly underused and probably a bit more powerful than most developers believe. Many developers would assume sort would do something like this:&lt;/p&gt;
&lt;p&gt;数组的 sort 方法 远远没有被充分利用，而且可能比开发者们想像的更加强大。很多开发者可能觉得 sort 方法可以用来做这种事情：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[1, 3, 9, 2].sort();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // Returns: [1, 2, 3, 9]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 返回 [1, 2, 3, 9]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;…which is true, but sort has more powerful uses, like this:&lt;/p&gt;
&lt;p&gt;……这没错，但它还有更强大的用法，比如这样：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123; name: &amp;quot;Robin Van PurseStrings&amp;quot;, age: 30 &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123; name: &amp;quot;Theo Walcott&amp;quot;, age: 24 &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123; name: &amp;quot;Bacary Sagna&amp;quot;, age: 28  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;].sort(function(obj1, obj2) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // Ascending: first age less than the previous&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 实现增序排列：前者的 age 小于后者&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return obj1.age - obj2.age;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // Returns:  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //    &amp;#123; name: &amp;quot;Theo Walcott&amp;quot;, age: 24 &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //    &amp;#123; name: &amp;quot;Bacary Sagna&amp;quot;, age: 28  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //    &amp;#123; name: &amp;quot;Robin Van PurseStrings&amp;quot;, age: 30 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;You can sort objects by property, not just simple basic items. In the event that JSON is sent down from the server and objects need to be sorted, keep this in mind!&lt;/p&gt;
&lt;p&gt;你不仅可以对简单类型的数组项进行排序，可以通过属性来排序对象。如果哪天服务器端发来一段 JSON 数据，而且其中的对象需要排序，你可别忘了这一招！&lt;/p&gt;
&lt;h2 id=&quot;4-Array-Length-for-Truncation&quot;&gt;&lt;a href=&quot;#4-Array-Length-for-Truncation&quot; class=&quot;headerlink&quot; title=&quot;4. Array Length for Truncation&quot;&gt;&lt;/a&gt;4. Array Length for Truncation&lt;/h2&gt;&lt;h3 id=&quot;4-用-length-属性来截断数组&quot;&gt;&lt;a href=&quot;#4-用-length-属性来截断数组&quot; class=&quot;headerlink&quot; title=&quot;4. 用 length 属性来截断数组&quot;&gt;&lt;/a&gt;4. 用 length 属性来截断数组&lt;/h3&gt;&lt;p&gt;There’s not a developer out there that hasn’t been bitten by JavaScript’s pass-objects-by-reference nature. Oftentimes developers will attempt to empty an array but mistakenly create a new one instead:&lt;/p&gt;
&lt;p&gt;几乎所有开发者都踩过 JavaScript 的这个坑——“传对象只是传引用”。开发者们经常会试图 把一个数组清空，但实际上却错误地创建了一个新数组。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var myArray = yourArray = [1, 2, 3];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// :(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 囧&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;myArray = []; // `yourArray` is still [1, 2, 3]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              // `yourArray` 仍然是 [1, 2, 3]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// The right way, keeping reference&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 正确的方法是保持引用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;myArray.length = 0; // `yourArray` and `myArray` both []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    // `yourArray` 和 `myArray`（以及其它所有对这个数组的引用）都变成 [] 了&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;What these developers probably realize is that objects are passed by reference, so while setting myArray to [] does create a new array, other references stay the same! Big mistake! Use array truncation instead.&lt;/p&gt;
&lt;p&gt;坑里的人们终于明白，原来传对象只是在传引用。因此当我把 myArray 重新赋值为 [] 时，确实会创建出一个新的空数组，但其它对老数组的引用仍然没变！大坑啊！还是换用截断的方法吧，少年。&lt;/p&gt;
&lt;h2 id=&quot;5-Array-Merging-with-push&quot;&gt;&lt;a href=&quot;#5-Array-Merging-with-push&quot; class=&quot;headerlink&quot; title=&quot;5. Array Merging with push&quot;&gt;&lt;/a&gt;5. Array Merging with push&lt;/h2&gt;&lt;h3 id=&quot;5-使用-push-来合并数组&quot;&gt;&lt;a href=&quot;#5-使用-push-来合并数组&quot; class=&quot;headerlink&quot; title=&quot;5. 使用 push 来合并数组&quot;&gt;&lt;/a&gt;5. 使用 push 来合并数组&lt;/h3&gt;&lt;p&gt;I showed in point 2 that Array’s slice and apply can do some cool stuff, so it shouldn’t surprise you that other Array methods can do the same trickery. This time we can merge arrays with the push method:&lt;/p&gt;
&lt;p&gt;在上面的第 2 节里，我展示了数组的 slice 和 apply 方法所能组合出的几个小妙招，所以对于数组方法的其它技巧，你应该已经做好心理准备了吧。这次我们使用 push 方法来合并数组：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var mergeTo = [4,5,6];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var mergeFrom = [7,8,9];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Array.prototype.push.apply(mergeTo, mergeFrom);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mergeTo; // is: [4, 5, 6, 7, 8, 9]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;A wonderful example of a lessor-known, simple native method for completing the basic task of array merging.&lt;/p&gt;
&lt;p&gt;这是一项不为人知的小技巧，简单的原生方法就可以实现数组合并这样的常见任务。&lt;/p&gt;
&lt;p&gt;（译注：这个方法的巧妙之外不仅在于 push 方法可以接收多个参数，还涉及到 apply 方法的第二个参数的用法。）&lt;/p&gt;
&lt;h2 id=&quot;6-Efficient-Feature-Object-Property-Detection&quot;&gt;&lt;a href=&quot;#6-Efficient-Feature-Object-Property-Detection&quot; class=&quot;headerlink&quot; title=&quot;6. Efficient Feature/Object Property Detection&quot;&gt;&lt;/a&gt;6. Efficient Feature/Object Property Detection&lt;/h2&gt;&lt;h3 id=&quot;6-高效探测功能特性和对象属性&quot;&gt;&lt;a href=&quot;#6-高效探测功能特性和对象属性&quot; class=&quot;headerlink&quot; title=&quot;6. 高效探测功能特性和对象属性&quot;&gt;&lt;/a&gt;6. 高效探测功能特性和对象属性&lt;/h3&gt;&lt;p&gt;Oftentimes developers will use the following technique to detect a browser feature:&lt;/p&gt;
&lt;p&gt;很多时候开发者们会像下面这样来探测浏览器的某个特性：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;if(navigator.geolocation) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // Do some stuff&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 在这里干点事情&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;While that works correctly, it isn’t always efficient, as that method of object detection can initialize resources in the browser. In the past, the snippet above caused memory leaks in some browsers. The better and more efficient route is checking for a key within an object:&lt;/p&gt;
&lt;p&gt;当然这可以正常工作，但它并不一定有很好的效率。因为这个对象探测方法会在浏览器中初始化资源。在过去，上面的代码片断可能会在某些浏览器下导致内存泄露。更好、更快的方法是检查对象是否包含某个键名：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;if(&amp;quot;geolocation&amp;quot; in navigator) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // Do some stuff&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 在这里干点事情&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;This key check is as simple as it gets and may avoid memory problems. Also note that if the value of a property is falsy, your check will fail despite the key being present.&lt;/p&gt;
&lt;p&gt;键名检查十分简单，而且可以避免内存泄露。另外请注意，如果这个属性的值是假值，那么前一种探测方式将会得到“否”的结果，并不能真正探测出这个键名是否存在。&lt;/p&gt;
&lt;h2 id=&quot;7-Event-preventDefault-and-stopPropagation&quot;&gt;&lt;a href=&quot;#7-Event-preventDefault-and-stopPropagation&quot; class=&quot;headerlink&quot; title=&quot;7. Event preventDefault and stopPropagation&quot;&gt;&lt;/a&gt;7. Event preventDefault and stopPropagation&lt;/h2&gt;&lt;h3 id=&quot;7-事件对象的-preventDefault-和-stopPropagation-方法&quot;&gt;&lt;a href=&quot;#7-事件对象的-preventDefault-和-stopPropagation-方法&quot; class=&quot;headerlink&quot; title=&quot;7. 事件对象的 preventDefault 和 stopPropagation 方法&quot;&gt;&lt;/a&gt;7. 事件对象的 preventDefault 和 stopPropagation 方法&lt;/h3&gt;&lt;p&gt;Oftentimes we trigger functionality when action elements like links are clicked. Obviously we don’t want the browser to follow the link upon click, so we use our handy JavaScript library’s Event.stop method:&lt;/p&gt;
&lt;p&gt;很多时候，当一个动作元素（比如链接）被点击时，会触发某个功能。显然我们并不希望点击链接时浏览器顺着这个链接跳转，于是我们会习惯性地使用 JavaScript 类库的 Event.stop 方法：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$(&amp;quot;a.trigger&amp;quot;).on(&amp;quot;click&amp;quot;, function(e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    e.stop();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // Do more stuff&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 在这里干点事情&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;（译注：不知道哪个类库有这个方法，估计其作用相当于 return false; 吧。语法看起来像 jQuery，但 jQuery 并没有这个方法，而且 jQuery 是支持 e.preventDefault 和 e.stopPropagation 方法的。）&lt;/p&gt;
&lt;p&gt;The problem with this lazy method of stopping the event is that not only does it prevent the default action, but it stops propagation of the event, meaning other event listeners for the elements wont fire because they don’t know about the event. It’s best to simply use preventDefault!&lt;/p&gt;
&lt;p&gt;这个懒方法有一个问题，它不仅阻止了浏览器的默认动作，同时也阻止了事件继续冒泡。这意味着元素上绑定的其它事件监听器将不会被触发，因为它们根本就不知道有事件发生。此时不妨使用 preventDefault 吧！&lt;/p&gt;
&lt;p&gt;Seasoned JavaScript developers will see this post and say “I knew those,” but at one point or another, they got tripped up on some of these points. Be mindful of the little things in JavaScript because they can make a big difference.&lt;/p&gt;
&lt;p&gt;JavaScript 老鸟们看到这篇文章可能会说“我早知道了”，但说不定什么时候，他们就会在某一点上栽跟头。提醒大家留意 JavaScript 中的各种小细节，失之毫厘谬以千里啊！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      Kieran
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Sweet Sublime Text —— 我的Sublime配置</title>
    <link href="http://go.kieran.top/post/30/"/>
    <id>http://go.kieran.top/post/30/</id>
    <published>2015-11-15T04:47:20.000Z</published>
    <updated>2015-11-16T15:57:30.000Z</updated>
    
    <content type="html">&lt;p&gt;以下是我的Sublime Text 3 配置&lt;br&gt;绿色便携版放在 github 了  &lt;/p&gt;
&lt;h2 id=&quot;1-Package-Control&quot;&gt;&lt;a href=&quot;#1-Package-Control&quot; class=&quot;headerlink&quot; title=&quot;1.Package Control&quot;&gt;&lt;/a&gt;1.Package Control&lt;/h2&gt;&lt;p&gt;Sublime包管理工具，必装&lt;br&gt;ctrl+` 打开控制台，输入以下代码&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import urllib2,os; pf=’Package Control.sublime-package’; ipp = sublime.installed_packages_path(); os.makedirs( ipp ) if not os.path.exists(ipp) else None; urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler( ))); open( os.path.join( ipp, pf), ‘wb’ ).write( urllib2.urlopen( ‘http://sublime.wbond.net/’ +pf.replace( ‘ ‘,’%20′ )).read()); print( ‘Please restart Sublime Text to finish installation’)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;2-Emmet&quot;&gt;&lt;a href=&quot;#2-Emmet&quot; class=&quot;headerlink&quot; title=&quot;2. Emmet&quot;&gt;&lt;/a&gt;2. Emmet&lt;/h2&gt;&lt;p&gt;Zen Coding，不多解释，懂得自然懂，虽然Sublime3 原生提供了部分Emmet语法，但是不全，比如 html:5 就没有  &lt;/p&gt;
&lt;p&gt;###修改 Emmet 兼容jsx 文件&lt;br&gt;打开 &lt;code&gt;preferences -&amp;gt; Key bindings - Users&lt;/code&gt;，把下面代码复制到[]内部&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;keys&quot;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;super+e&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;args&quot;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;action&quot;: &quot;expand_abbreviation&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;command&quot;: &quot;run_emmet_action&quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;context&quot;: [&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;key&quot;: &quot;emmet_action_enabled.expand_abbreviation&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;keys&quot;: [&quot;tab&quot;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;command&quot;: &quot;expand_abbreviation_by_tab&quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;context&quot;: [&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;operand&quot;: &quot;source.js&quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;operator&quot;: &quot;equal&quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;match_all&quot;: true,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;key&quot;: &quot;selector&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;key&quot;: &quot;preceding_text&quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;operator&quot;: &quot;regex_contains&quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;operand&quot;: &quot;(\\b(a\\b|div|span|p\\b|button)(\\.\\w*|&amp;gt;\\w*)?([^&amp;#125;]*?&amp;#125;$)?)&quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;match_all&quot;: true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;key&quot;: &quot;selection_empty&quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;operator&quot;: &quot;equal&quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;operand&quot;: true,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;match_all&quot;: true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;3-EditorConfig&quot;&gt;&lt;a href=&quot;#3-EditorConfig&quot; class=&quot;headerlink&quot; title=&quot;3.EditorConfig&quot;&gt;&lt;/a&gt;3.EditorConfig&lt;/h2&gt;&lt;p&gt;代码格式管家，最主要的功能是，同一项目代码在不同编辑器下能够保持统一的代码风格（主要是缩进，如sublime默认缩进宽度是4，我写JS缩进都是2）。&lt;br&gt;EditorConfig支持除Sublime之外的很多主流编辑器与IDE，如VisualStudio, Eclipse, VIM, WebStorm等&lt;/p&gt;
&lt;h3 id=&quot;使用：&quot;&gt;&lt;a href=&quot;#使用：&quot; class=&quot;headerlink&quot; title=&quot;使用：&quot;&gt;&lt;/a&gt;使用：&lt;/h3&gt;&lt;p&gt;在项目根目录新建一个文件：.editorconfig，在此文件里填写你需要的格式规则，以下是一个典型的.editorconfig&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# http://editorconfig.org&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;root = true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[*]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Change these settings to your own preference&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;indent_style = space&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;indent_size = 2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# We recommend you to keep these unchanged&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;end_of_line = lf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;charset = utf-8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;trim_trailing_whitespace = true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;insert_final_newline = true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[*.md]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;trim_trailing_whitespace = false&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;4-JSHint-Gutter&quot;&gt;&lt;a href=&quot;#4-JSHint-Gutter&quot; class=&quot;headerlink&quot; title=&quot;4. JSHint Gutter&quot;&gt;&lt;/a&gt;4. JSHint Gutter&lt;/h2&gt;&lt;p&gt;JSHint不但能检查JS代码的语法错误，还能够监控代码质量（风格），很多公司跟开源项目都在使用它，比如：Facebook、jQuery、Bootstrap等等。在Github上，使用JSHint的项目多如牛毛，如果你在某个项目里面，发现有.jshintrc文件，那它就使用了JSHint。JSHint是一个独立的工具，它不直接提供对Sublime的支持，它本身只提供基于NodeJS的命令行工具。而JSHint Gutter这个插件，它能够调用JSHint的命令行工具，执行代码检查并将结果显示到Sublime界面上。  &lt;/p&gt;
&lt;h3 id=&quot;安装JSHint&quot;&gt;&lt;a href=&quot;#安装JSHint&quot; class=&quot;headerlink&quot; title=&quot;安装JSHint&quot;&gt;&lt;/a&gt;安装JSHint&lt;/h3&gt;&lt;p&gt;先安装好NodeJS，然后在终端/命令行中输入 npm install -g jshint  &lt;/p&gt;
&lt;h3 id=&quot;安装与配置JSHint-Gutter&quot;&gt;&lt;a href=&quot;#安装与配置JSHint-Gutter&quot; class=&quot;headerlink&quot; title=&quot;安装与配置JSHint Gutter&quot;&gt;&lt;/a&gt;安装与配置JSHint Gutter&lt;/h3&gt;&lt;p&gt;安装打开&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Preference-&amp;gt;Package Settings-&amp;gt;JSHint Gutter-&amp;gt;Set &lt;span class=&quot;string&quot;&gt;&#39;node&#39;&lt;/span&gt; Path&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;设置NodeJS执行文件所在的路径（node_path），并将lint_on_save（文件保存时检查）选项设为 true&lt;/p&gt;
&lt;h3 id=&quot;设置-jshintrc&quot;&gt;&lt;a href=&quot;#设置-jshintrc&quot; class=&quot;headerlink&quot; title=&quot;设置.jshintrc&quot;&gt;&lt;/a&gt;设置.jshintrc&lt;/h3&gt;&lt;p&gt;在项目根目录新建一个文件：.jshintrc，在此文件里填写你的检查规则，以下是一个典型的.jshintrc&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;curly&quot;&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;eqeqeq&quot;&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;immed&quot;&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;noarg&quot;&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;noempty&quot;&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;quotmark&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;single&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;undef&quot;&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;unused&quot;&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;node&quot;&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第二行：curly 表示所有的代码块必须使用大括号&lt;br&gt;第三行：eqeqeq 表示判断相等时，必须使用 ===&lt;br&gt;第四行：immed 表示立即执行函数必须用括号包起来 &lt;code&gt;(function () { } ());&lt;/code&gt;&lt;br&gt;第五行：noarg 表示禁止使用 &lt;code&gt;arguments.caller&lt;/code&gt; 和 &lt;code&gt;arguments.callee&lt;/code&gt;&lt;br&gt;第六行：noempty 表示禁止出现空的代码块 &lt;code&gt;{ }&lt;/code&gt;&lt;br&gt;第七行：quotmark 是引号的使用规则，有以下四个选项&lt;br&gt;false : 不检查&lt;br&gt;true : 检查一致性（要么都是单引号，要么都是双引号）&lt;br&gt;single : 必须都是单引号&lt;br&gt;double : 必须都是双引号  &lt;/p&gt;
&lt;h2 id=&quot;5-Bracket​Highlighter&quot;&gt;&lt;a href=&quot;#5-Bracket​Highlighter&quot; class=&quot;headerlink&quot; title=&quot;5. Bracket​Highlighter&quot;&gt;&lt;/a&gt;5. Bracket​Highlighter&lt;/h2&gt;&lt;p&gt;括号高亮匹配，眼睛不好&lt;/p&gt;
&lt;h2 id=&quot;6-Js​Format&quot;&gt;&lt;a href=&quot;#6-Js​Format&quot; class=&quot;headerlink&quot; title=&quot;6. Js​Format&quot;&gt;&lt;/a&gt;6. Js​Format&lt;/h2&gt;&lt;p&gt;JavaScript 代码格式化插件，快捷键是 ctrl+alt+f&lt;/p&gt;
&lt;h2 id=&quot;7-Color​Picker&quot;&gt;&lt;a href=&quot;#7-Color​Picker&quot; class=&quot;headerlink&quot; title=&quot;7. Color​Picker&quot;&gt;&lt;/a&gt;7. Color​Picker&lt;/h2&gt;&lt;p&gt;跨平台取色器插件，快捷键 ctrl+shift+c&lt;/p&gt;
&lt;h2 id=&quot;8-Color-Highlighter&quot;&gt;&lt;a href=&quot;#8-Color-Highlighter&quot; class=&quot;headerlink&quot; title=&quot;8. Color Highlighter&quot;&gt;&lt;/a&gt;8. Color Highlighter&lt;/h2&gt;&lt;p&gt;CSS中的颜色可以实时看到什么颜色&lt;/p&gt;
&lt;h2 id=&quot;9-TrailingSpacer&quot;&gt;&lt;a href=&quot;#9-TrailingSpacer&quot; class=&quot;headerlink&quot; title=&quot;9. TrailingSpacer&quot;&gt;&lt;/a&gt;9. TrailingSpacer&lt;/h2&gt;&lt;p&gt;高亮显示多余的空格和Tab，在保存文件的时候自动删除他们，代码洁癖&lt;/p&gt;
&lt;h2 id=&quot;9-Babel&quot;&gt;&lt;a href=&quot;#9-Babel&quot; class=&quot;headerlink&quot; title=&quot;9. Babel&quot;&gt;&lt;/a&gt;9. Babel&lt;/h2&gt;&lt;p&gt;支持ES6， React.js, jsx代码高亮，对 JavaScript, jQuery 也有很好的扩展  &lt;/p&gt;
&lt;h3 id=&quot;配置&quot;&gt;&lt;a href=&quot;#配置&quot; class=&quot;headerlink&quot; title=&quot;配置&quot;&gt;&lt;/a&gt;配置&lt;/h3&gt;&lt;p&gt;打开.js, .jsx 后缀的文件;&lt;br&gt;打开菜单&lt;code&gt;view， Syntax -&amp;gt; Open all with current extension as... -&amp;gt; Babel -&amp;gt; JavaScript (Babel)&lt;/code&gt;，选择babel为默认 javascript 打开syntax&lt;/p&gt;
&lt;h2 id=&quot;10-Minifier&quot;&gt;&lt;a href=&quot;#10-Minifier&quot; class=&quot;headerlink&quot; title=&quot;10. Minifier&quot;&gt;&lt;/a&gt;10. Minifier&lt;/h2&gt;&lt;p&gt;JS, CSS压缩&lt;/p&gt;
&lt;h2 id=&quot;11-Local-History&quot;&gt;&lt;a href=&quot;#11-Local-History&quot; class=&quot;headerlink&quot; title=&quot;11. Local History&quot;&gt;&lt;/a&gt;11. Local History&lt;/h2&gt;&lt;p&gt;用过 WebStorm 的应该知道，类似于本地的自动的历史版本管理，有时候能救命的东西&lt;/p&gt;
&lt;h2 id=&quot;添加右键菜单&quot;&gt;&lt;a href=&quot;#添加右键菜单&quot; class=&quot;headerlink&quot; title=&quot;添加右键菜单&quot;&gt;&lt;/a&gt;&lt;strong&gt;&lt;strong&gt;添加右键菜单&lt;/strong&gt;&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;绿色便携版没有右键 Edit with sublime 得写注册表，我参考了网上，用ActiveX JS写了个网页脚本，用管理员权限打开IE浏览器运行这个网页&lt;br&gt;先在input框里选择你的 sublime_text.exe文件，主要是获取你的sublime文件路径，其实ActiveX里有个api是WshShell.CurrentDirectory获取当前路径，不知道为什么运行后永远是桌面路径，暂时没找到解决方法，只能退而求其次自己选择路径了&lt;br&gt;看按钮名就知道功能了，添加右键菜单的注册表和删除右键菜单的注册表&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;暂时先这些，如有改动我会及时更新&lt;/p&gt;
&lt;style&gt;h2{text-transform: none}&lt;/style&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      我的Sublime配置
    
    </summary>
    
      <category term="Misc" scheme="http://go.kieran.top/categories/Misc/"/>
    
    
      <category term="Sublime" scheme="http://go.kieran.top/tags/Sublime/"/>
    
  </entry>
  
  <entry>
    <title>用async控制异步流程</title>
    <link href="http://go.kieran.top/post/29/"/>
    <id>http://go.kieran.top/post/29/</id>
    <published>2015-10-23T00:18:35.000Z</published>
    <updated>2016-04-15T03:46:03.000Z</updated>
    
    <content type="html">&lt;p&gt;写过JS的应该都知道，JS有个很蛋疼的地方，就是回调&lt;br&gt;一不小心，你的代码就会变成这样…..&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; GG = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  setTimeout(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setTimeout(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      setTimeout(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setTimeout(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          setTimeout(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#125;, &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;, &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;, &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;, &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;, &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;GG();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;看到这段代码我敢肯定每个人写JS的内心都有万匹草泥马呼啸奔腾而过…&lt;br&gt;要是再复杂点…中间再加点if判断什么的…这代码简直呵了个呵&lt;br&gt;嵌套加嵌套，摩擦摩擦&lt;br&gt;自己都不想看第二遍了吧  &lt;/p&gt;
&lt;h3 id=&quot;那么问题来了！&quot;&gt;&lt;a href=&quot;#那么问题来了！&quot; class=&quot;headerlink&quot; title=&quot;那么问题来了！&quot;&gt;&lt;/a&gt;那么问题来了！&lt;/h3&gt;&lt;p&gt;该如何写的不那么丑呢？其实也不算丑…主要我写代码比较好看，哦哈哈哈…&lt;br&gt;回归正题！该咋办呢？&lt;br&gt;幸好，我们碰到的问题前人已经碰到过了&lt;br&gt;于是诞生了一个牛逼的模块，也就是本文的主角——Async&lt;br&gt;这个模块就是用来解决异步流程控制问题的，接下来我们来看看上面这段代码如果用async写应该怎么写：&lt;br&gt;首先说一下函数功能，&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;async.series(tasks, [callback]) 是按顺序执行指定的函数,前一个结束了才会执行下一个&lt;br&gt;&lt;/pre&gt;&lt;br&gt;该写后的代码：&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt; = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;async&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt;.series([&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;callback&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setTimeout(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      callback(&lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;, &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;callback&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setTimeout(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      callback(&lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;, &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;callback&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setTimeout(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      callback(&lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;, &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;callback&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setTimeout(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      callback(&lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;, &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;callback&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setTimeout(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      callback(&lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;, &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;什么？你说怎么这么长？+_+&lt;br&gt;可能我举得栗子不好…不过这不影响…你看，从上往下执行，这流程思路多清晰啊！多自然啊！&lt;br&gt;再也没有层层嵌套！  &lt;/p&gt;
&lt;p&gt;&lt;pre&gt;async.waterfall(tasks, [callback])&lt;br&gt;waterfall和series函数有很多相似之处，都是按顺序依次执行一组函数，不同之处是waterfall每个函数产生的值，都将传给下一个函数，而series则没有这个功能&lt;br&gt;&lt;/pre&gt;&lt;br&gt;为了更好的展示这个函数，我写了个爬虫：&lt;br&gt;具体如下：&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt; = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;async&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; request = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;superagent&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; cheerio = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;cheerio&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; url = &lt;span class=&quot;string&quot;&gt;&#39;http://go.kieran.top&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt;.waterfall([&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;callback&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    request&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      .get(url + &lt;span class=&quot;string&quot;&gt;&#39;/archives&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      .end(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err, res&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; $ = cheerio.load(res.text);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; urls = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $(&lt;span class=&quot;string&quot;&gt;&#39;#services .title a&#39;&lt;/span&gt;).each(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;id, elem&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          urls.push(url + $(elem).attr(&lt;span class=&quot;string&quot;&gt;&#39;href&#39;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        callback(&lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;, urls);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;urls, callback&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt;.mapLimit(urls, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;urlId, callback&lt;/span&gt;) &lt;/span&gt;&amp;#123; &lt;span class=&quot;comment&quot;&gt;//并发数是5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; d = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(d.getSeconds() + &lt;span class=&quot;string&quot;&gt;&#39;s &#39;&lt;/span&gt; + d.getMilliseconds() + &lt;span class=&quot;string&quot;&gt;&#39;ms &#39;&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&#39;正在抓取：&#39;&lt;/span&gt; + urlId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      request&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .get(urlId)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .end(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err, res&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; $ = cheerio.load(res.text);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          callback(&lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;, $(&lt;span class=&quot;string&quot;&gt;&#39;#intro .col-md-8 h1&#39;&lt;/span&gt;).text());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err, res&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;文章标题:&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(res);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      callback();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;], &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err, res&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(res);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;简单说就是第一个函数是从archives页获取所以文章的url，然后push到urls数组里，完成后把urls数组传递给第二个函数，第二个函数并发获取数组里链接的文章的title，并发数我随便写了个5，因为有些网站会因为你的并发数太多而把你的ip禁掉，虽然我的网站应该不会这样。&lt;/p&gt;
&lt;h4 id=&quot;运行结果&quot;&gt;&lt;a href=&quot;#运行结果&quot; class=&quot;headerlink&quot; title=&quot;运行结果&quot;&gt;&lt;/a&gt;运行结果&lt;/h4&gt;&lt;p&gt;&lt;pre&gt;&gt; node test.js&lt;br&gt;19s 342ms 正在抓取：&lt;a href=&quot;http://go.kieran.top/post/28/&quot;&gt;http://go.kieran.top/post/28/&lt;/a&gt;&lt;br&gt;19s 349ms 正在抓取：&lt;a href=&quot;http://go.kieran.top/post/27/&quot;&gt;http://go.kieran.top/post/27/&lt;/a&gt;&lt;br&gt;19s 350ms 正在抓取：&lt;a href=&quot;http://go.kieran.top/post/26/&quot;&gt;http://go.kieran.top/post/26/&lt;/a&gt;&lt;br&gt;19s 353ms 正在抓取：&lt;a href=&quot;http://go.kieran.top/post/25/&quot;&gt;http://go.kieran.top/post/25/&lt;/a&gt;&lt;br&gt;19s 361ms 正在抓取：&lt;a href=&quot;http://go.kieran.top/post/24/&quot;&gt;http://go.kieran.top/post/24/&lt;/a&gt;&lt;br&gt;19s 619ms 正在抓取：&lt;a href=&quot;http://go.kieran.top/post/23/&quot;&gt;http://go.kieran.top/post/23/&lt;/a&gt;&lt;br&gt;19s 642ms 正在抓取：&lt;a href=&quot;http://go.kieran.top/post/22/&quot;&gt;http://go.kieran.top/post/22/&lt;/a&gt;&lt;br&gt;19s 686ms 正在抓取：&lt;a href=&quot;http://go.kieran.top/post/21/&quot;&gt;http://go.kieran.top/post/21/&lt;/a&gt;&lt;br&gt;19s 724ms 正在抓取：&lt;a href=&quot;http://go.kieran.top/post/20/&quot;&gt;http://go.kieran.top/post/20/&lt;/a&gt;&lt;br&gt;19s 750ms 正在抓取：&lt;a href=&quot;http://go.kieran.top/post/19/&quot;&gt;http://go.kieran.top/post/19/&lt;/a&gt;&lt;br&gt;19s 924ms 正在抓取：&lt;a href=&quot;http://go.kieran.top/post/18/&quot;&gt;http://go.kieran.top/post/18/&lt;/a&gt;&lt;br&gt;19s 958ms 正在抓取：&lt;a href=&quot;http://go.kieran.top/post/17/&quot;&gt;http://go.kieran.top/post/17/&lt;/a&gt;&lt;br&gt;20s 6ms 正在抓取：&lt;a href=&quot;http://go.kieran.top/post/16/&quot;&gt;http://go.kieran.top/post/16/&lt;/a&gt;&lt;br&gt;20s 19ms 正在抓取：&lt;a href=&quot;http://go.kieran.top/post/15/&quot;&gt;http://go.kieran.top/post/15/&lt;/a&gt;&lt;br&gt;20s 61ms 正在抓取：&lt;a href=&quot;http://go.kieran.top/post/14/&quot;&gt;http://go.kieran.top/post/14/&lt;/a&gt;&lt;br&gt;20s 187ms 正在抓取：&lt;a href=&quot;http://go.kieran.top/post/13/&quot;&gt;http://go.kieran.top/post/13/&lt;/a&gt;&lt;br&gt;20s 260ms 正在抓取：&lt;a href=&quot;http://go.kieran.top/post/12/&quot;&gt;http://go.kieran.top/post/12/&lt;/a&gt;&lt;br&gt;20s 286ms 正在抓取：&lt;a href=&quot;http://go.kieran.top/post/11/&quot;&gt;http://go.kieran.top/post/11/&lt;/a&gt;&lt;br&gt;20s 318ms 正在抓取：&lt;a href=&quot;http://go.kieran.top/post/10/&quot;&gt;http://go.kieran.top/post/10/&lt;/a&gt;&lt;br&gt;20s 343ms 正在抓取：&lt;a href=&quot;http://go.kieran.top/post/9/&quot;&gt;http://go.kieran.top/post/9/&lt;/a&gt;&lt;br&gt;20s 415ms 正在抓取：&lt;a href=&quot;http://go.kieran.top/post/8/&quot;&gt;http://go.kieran.top/post/8/&lt;/a&gt;&lt;br&gt;20s 537ms 正在抓取：&lt;a href=&quot;http://go.kieran.top/post/7/&quot;&gt;http://go.kieran.top/post/7/&lt;/a&gt;&lt;br&gt;20s 564ms 正在抓取：&lt;a href=&quot;http://go.kieran.top/post/6/&quot;&gt;http://go.kieran.top/post/6/&lt;/a&gt;&lt;br&gt;20s 586ms 正在抓取：&lt;a href=&quot;http://go.kieran.top/post/5/&quot;&gt;http://go.kieran.top/post/5/&lt;/a&gt;&lt;br&gt;20s 621ms 正在抓取：&lt;a href=&quot;http://go.kieran.top/post/4/&quot;&gt;http://go.kieran.top/post/4/&lt;/a&gt;&lt;br&gt;20s 681ms 正在抓取：&lt;a href=&quot;http://go.kieran.top/post/3/&quot;&gt;http://go.kieran.top/post/3/&lt;/a&gt;&lt;br&gt;20s 823ms 正在抓取：&lt;a href=&quot;http://go.kieran.top/post/2/&quot;&gt;http://go.kieran.top/post/2/&lt;/a&gt;&lt;br&gt;20s 847ms 正在抓取：&lt;a href=&quot;http://go.kieran.top/post/1/&quot;&gt;http://go.kieran.top/post/1/&lt;/a&gt;&lt;br&gt;文章标题:&lt;br&gt;[ ‘树莓派教程——HC-SR04 超声波测距模块’,&lt;br&gt;  ‘树莓派教程——BMP180 温度气压传感器’,&lt;br&gt;  ‘树莓派教程——人体红外感应模块HC-SR501加有源蜂鸣器实现简易报警装置’,&lt;br&gt;  ‘树莓派教程——DHT22温湿度传感器AM2302’,&lt;br&gt;  ‘树莓派教程——LED灯’,&lt;br&gt;  ‘树莓派初体验——配置篇’,&lt;br&gt;  ‘前端黑科技——纯clip-path制作属于你的个人动画’,&lt;br&gt;  ‘结果’,&lt;br&gt;  ‘非对称密码学实验：Python实现RSA的加解密’,&lt;br&gt;  ‘慕课网视频下载小程序’,&lt;br&gt;  ‘判断 IE 全版本浏览器的几种方法’,&lt;br&gt;  ‘2015 阿里面试小结’,&lt;br&gt;  ‘HTML5 + JavaScript 读取本地文件’,&lt;br&gt;  ‘aircrack-ng 命令简单记录’,&lt;br&gt;  ‘TKL-Hexo Theme’,&lt;br&gt;  ‘iframe &amp;amp;&amp;amp; 网页底部 动态设置高度’,&lt;br&gt;  ‘HTML的一些小动“画”?’,&lt;br&gt;  ‘Node.js初体验——从一个简单的爬虫开始’,&lt;br&gt;  ‘浅谈CSRF防御-基础篇’,&lt;br&gt;  ‘记一次有趣的CSRF’,&lt;br&gt;  ‘聊聊 Google Project Zero’,&lt;br&gt;  ‘远程线程注入(0X02)注入第一个DLL’,&lt;br&gt;  ‘远程线程注入(0X01)第一个动态链接库’,&lt;br&gt;  ‘JavaScript操作注册表’,&lt;br&gt;  ‘信息隐藏——LSB算法’,&lt;br&gt;  ‘IntelliJ IDEA 14.0正式版激活算法’,&lt;br&gt;  ‘MBR,GPT的小科普’,&lt;br&gt;  ‘Hexo 简单优化’ ]&lt;br&gt;&lt;/pre&gt;&lt;br&gt;还有一些我自认为重要的函数我简单写下API吧，具体的还是去看官方Doc吧 &lt;a href=&quot;https://github.com/caolan/async&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/caolan/async&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;parallel(tasks, [callback])&lt;br&gt;parallel函数是并行执行多个函数，每个函数都是立即执行，不需要等待其它函数先执行。 传给最终callback的数组中的数据按照tasks中声明的顺序，而不是执行完成的顺序&lt;br&gt;queue(worker, concurrency);&lt;br&gt;queue相当于一个加强版的parallel，主要是限制了worker数量，不再一次性全部执行。当worker数量不够用时，新加入的任务将会排队等候，直到有新的worker可用。&lt;br&gt;它有多个点可供回调，如无等候任务时(empty)、全部执行完时(drain)等。&lt;br&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;h3 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h3&gt;&lt;p&gt;&lt;pre&gt;串行控制：&lt;br&gt;series、waterfall、compose;&lt;br&gt;并行控制：&lt;br&gt;parallel、parallelLimit、queue;&lt;br&gt;循环控制：&lt;br&gt;whilst、doWhilst、until、doUntil、forever;&lt;br&gt;其他控制：&lt;br&gt;apply‘applyEach、iterator、auto;&lt;br&gt;&lt;/pre&gt;&lt;br&gt;学习了async模块后，对一般的函数嵌套问题都能够引刃而解，最后感谢读到这里的人，不嫌弃博主的烂代码…TAT&lt;/p&gt;
</content>
    
    <summary type="html">
    
      Kieran
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>树莓派教程——HC-SR04 超声波测距模块</title>
    <link href="http://go.kieran.top/post/28/"/>
    <id>http://go.kieran.top/post/28/</id>
    <published>2015-09-25T17:02:13.000Z</published>
    <updated>2015-10-29T06:22:33.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://kieran-hexo.qiniudn.com/hexo_28_1.png&quot; alt=&quot;超声波测距模块&quot;&gt;&lt;/p&gt;
&lt;p&gt;###超声波测距模块简单介绍&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;电压：5V&lt;br&gt;静态电流：小于2mA&lt;br&gt;电平输出：高5V&lt;br&gt;电平输出：底0V&lt;br&gt;感应角度：不大于15度&lt;br&gt;探测距离：2cm-450cm&lt;/pre&gt;&lt;br&gt;接线方式，VCC、trig（控制端）、echo（接收端）、 GND&lt;br&gt;一个控制口发一个10US以上的高电平,就可以在接收口等待高电平输出。一有输出就可以开定时器计时,当此口变为低电平时就可以读定时器的值,此时就为此次测距的时间,即可算出距离.如此不断的周期测,就可以达到移动测量的目的了&lt;br&gt;接线图：&lt;br&gt;&lt;img src=&quot;http://kieran-hexo.qiniudn.com/hexo_28_2.png&quot; alt=&quot;超声波测距模块接线图&quot;&gt;&lt;br&gt;GPIO口是3.3V的，所以中间接了电阻&lt;br&gt;下面看测试程序：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; RPi.GPIO &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; GPIO&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; time&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;GPIO.setmode(GPIO.BOARD)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TRIG = &lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ECHO = &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;GPIO.setup(TRIG, GPIO.OUT)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;GPIO.setup(ECHO, GPIO.IN)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    GPIO.output(TRIG, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    time.sleep(&lt;span class=&quot;number&quot;&gt;0.01&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    GPIO.output(TRIG, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    time.sleep(&lt;span class=&quot;number&quot;&gt;0.00001&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    GPIO.output(TRIG, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    start = time.time()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; GPIO.input(ECHO) == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      start = time.time()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; GPIO.input(ECHO) == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      stop = time.time()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    distance = (stop - start) * &lt;span class=&quot;number&quot;&gt;34000&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;#声波的速度是340m/s&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; distance&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;except&lt;/span&gt; KeyboardInterrupt:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  GPIO.cleanup()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;还是很简单的，理解一下就行&lt;br&gt;下面的视频里我做了一个根据测的距离每隔两厘米亮一个灯的DEMO&lt;br&gt;如果你看过我写的前几篇教程，相信你很快就能做出来了，我这里只是抛砖引玉  &lt;/p&gt;
&lt;p&gt;&lt;video src=&quot;http://kieran-hexo.qiniudn.com/hexo_28.mp4&quot; width=&quot;100%&quot; controls=&quot;controls&quot; loop=&quot;loop&quot; webkit-playsinline=&quot;&quot;&gt;Your browser does not support the video tag.&lt;/video&gt;&lt;br&gt;推荐两个用树莓派超声波模块做的游戏，感兴趣的同学可以玩一下：&lt;br&gt;基于RasberryPi的体感音乐游戏：&lt;a href=&quot;http://homeway.me/2015/03/30/play-music-through-senses&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://homeway.me/2015/03/30/play-music-through-senses&lt;/a&gt;&lt;br&gt;基于RasberryPi的打地鼠游戏: &lt;a href=&quot;http://homeway.me/2015/05/26/play-hamster-game-through-raspberry&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://homeway.me/2015/05/26/play-hamster-game-through-raspberry&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      Kieran
    
    </summary>
    
      <category term="Raspberrypi" scheme="http://go.kieran.top/categories/Raspberrypi/"/>
    
    
      <category term="Raspberrypi" scheme="http://go.kieran.top/tags/Raspberrypi/"/>
    
      <category term="HC-SR04" scheme="http://go.kieran.top/tags/HC-SR04/"/>
    
      <category term="超声波测距模块" scheme="http://go.kieran.top/tags/%E8%B6%85%E5%A3%B0%E6%B3%A2%E6%B5%8B%E8%B7%9D%E6%A8%A1%E5%9D%97/"/>
    
  </entry>
  
  <entry>
    <title>树莓派教程——BMP180 温度气压传感器</title>
    <link href="http://go.kieran.top/post/27/"/>
    <id>http://go.kieran.top/post/27/</id>
    <published>2015-09-24T16:15:40.000Z</published>
    <updated>2015-09-24T17:50:17.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://kieran-hexo.qiniudn.com/hexo_27_1.png&quot; alt=&quot;温度气压传感器&quot;&gt;&lt;br&gt;首先得把这个小传感器焊接好&lt;br&gt;幸好有个同学是搞电子设计的，寝室有焊电路的设备，找他一分钟就焊好了&lt;br&gt;焊好后如下图&lt;br&gt;&lt;img src=&quot;http://kieran-hexo.qiniudn.com/hexo_27_2.jpg&quot; alt=&quot;温度气压传感器&quot;&gt;&lt;/p&gt;
&lt;p&gt;###介绍与配置&lt;br&gt;BMP180 是一块 i2c 电路板，这意味着它是遵循 i2c 协议来和树莓派交流的  &lt;/p&gt;
&lt;p&gt;&lt;pre&gt;i2c,两线式串行总线&lt;br&gt;一条串行数据线SDA，一条串行时钟线SCL&lt;br&gt;SDA传输数据是大端传输，每次传输8bit，即一字节。&lt;br&gt;总线上每个设备都有自己的一个addr，共7个bit，广播地址全0&lt;br&gt;系统中可能有多个同种芯片，为此addr分为固定部分和可编程部份，细节视芯片而定，看datasheet&lt;br&gt;&lt;/pre&gt;&lt;br&gt;配置i2c看这个链接吧 &lt;a href=&quot;https://learn.adafruit.com/adafruits-raspberry-pi-lesson-4-gpio-setup/configuring-i2c&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://learn.adafruit.com/adafruits-raspberry-pi-lesson-4-gpio-setup/configuring-i2c&lt;/a&gt;&lt;br&gt;配置完好输入 sudo i2cdetect -y 1&lt;br&gt;会显示如下图&lt;br&gt;&lt;img src=&quot;http://kieran-hexo.qiniudn.com/hexo_27_3.png&quot; alt=&quot;i2c&quot;&gt;&lt;br&gt;77 就是压强传感器的地址&lt;br&gt;确保配置成功后，我们来看i2c在树莓派上的位置&lt;br&gt;&lt;img src=&quot;http://kieran-hexo.qiniudn.com/hexo_27_4.png&quot; alt=&quot;i2c&quot;&gt;&lt;/p&gt;
&lt;p&gt;###接线&lt;br&gt;接下来的接线就没什么难了  &lt;/p&gt;
&lt;p&gt;&lt;pre&gt;vcc 接 Pin 1&lt;br&gt;GND 接 Pin 6&lt;br&gt;SCL 接 Pin 5&lt;br&gt;SDA 接 Pin 3&lt;br&gt;&lt;/pre&gt;&lt;br&gt;连接好后按下面步骤来&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git clone https://github.com/adafruit/Adafruit_Python_BMP.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd Adafruit_Python_BMP&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo python setup.py install&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd examples  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo python simpletest.py&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;输出是这样的：&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;pi@raspberrypi ~/dev/git/Adafruit_Python_BMP/examples $ sudo python simpletest.py&lt;br&gt;Temp = 28.20 “C&lt;br&gt;Pressure = 100465.00 Pa&lt;br&gt;Altitude = 71.85 m&lt;br&gt;Sealevel Pressure = 100468.00 Pa&lt;br&gt;pi@raspberrypi ~/dev/git/Adafruit_Python_BMP/examples $ sudo python simpletest.py&lt;br&gt;Temp = 30.20 “C&lt;br&gt;Pressure = 100501.00 Pa&lt;br&gt;Altitude = 68.24 m&lt;br&gt;Sealevel Pressure = 100502.00 Pa&lt;br&gt;&lt;/pre&gt;&lt;br&gt;玩的愉快！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      Kieran
    
    </summary>
    
      <category term="Raspberrypi" scheme="http://go.kieran.top/categories/Raspberrypi/"/>
    
    
      <category term="Raspberrypi" scheme="http://go.kieran.top/tags/Raspberrypi/"/>
    
      <category term="BMP180" scheme="http://go.kieran.top/tags/BMP180/"/>
    
      <category term="温度气压传感器" scheme="http://go.kieran.top/tags/%E6%B8%A9%E5%BA%A6%E6%B0%94%E5%8E%8B%E4%BC%A0%E6%84%9F%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>树莓派教程——人体红外感应模块HC-SR501加有源蜂鸣器实现简易报警装置</title>
    <link href="http://go.kieran.top/post/26/"/>
    <id>http://go.kieran.top/post/26/</id>
    <published>2015-09-24T14:32:21.000Z</published>
    <updated>2015-09-24T15:18:49.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://kieran-hexo.qiniudn.com/hexo_26_1.png&quot; alt=&quot;人体红外感应模块HC-SR501&quot;&gt;&lt;/p&gt;
&lt;p&gt;##人体红外感应模块HC-SR501&lt;br&gt;Output Timing 是感应延时，数值大约在 0.5s~300s&lt;br&gt;Sensitivity 是感应距离&lt;br&gt;调节电位器顺时针旋转，分别是增加感应延时和感应距离  &lt;/p&gt;
&lt;p&gt;####报警装置接线&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;人体红外感应模块：&lt;br&gt;5V 接树莓派上的 Pin 2&lt;br&gt;Groud 接 Pin 6&lt;br&gt;Output 接 10千欧电阻 再接 Pin 12&lt;br&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;有源蜂鸣器模块(和LED灯差不多)&lt;br&gt;正极接 Pin 16&lt;br&gt;负极接 Pin 14&lt;br&gt;&lt;/pre&gt;&lt;br&gt;代码如下&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Author: Kieran&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; RPi.GPIO &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; GPIO&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; time&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;GPIO.setmode(GPIO.BOARD)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;GPIO.setup(&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;, GPIO.IN)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;GPIO.setup(&lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;, GPIO.OUT)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; GPIO.input(&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;) == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Some people here!&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      GPIO.output(&lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;, GPIO.HIGH)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Nobody!&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      GPIO.output(&lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;, GPIO.LOW)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    time.sleep(&lt;span class=&quot;number&quot;&gt;.1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;except&lt;/span&gt; KeyboardInterrupt:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  GPIO.cleanup()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;All Cleanup!&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;演示视频：&lt;/p&gt;
&lt;p&gt;&lt;video src=&quot;http://kieran-hexo.qiniudn.com/hexo_26.mp4&quot; width=&quot;100%&quot; controls=&quot;controls&quot; loop=&quot;loop&quot;&gt;Your browser does not support the video tag.&lt;/video&gt;&lt;br&gt;玩的愉快！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      Kieran
    
    </summary>
    
      <category term="Raspberrypi" scheme="http://go.kieran.top/categories/Raspberrypi/"/>
    
    
      <category term="Raspberrypi" scheme="http://go.kieran.top/tags/Raspberrypi/"/>
    
      <category term="人体红外感应模块HC-SR501" scheme="http://go.kieran.top/tags/%E4%BA%BA%E4%BD%93%E7%BA%A2%E5%A4%96%E6%84%9F%E5%BA%94%E6%A8%A1%E5%9D%97HC-SR501/"/>
    
      <category term="有源蜂鸣器" scheme="http://go.kieran.top/tags/%E6%9C%89%E6%BA%90%E8%9C%82%E9%B8%A3%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>树莓派教程——DHT22温湿度传感器AM2302</title>
    <link href="http://go.kieran.top/post/25/"/>
    <id>http://go.kieran.top/post/25/</id>
    <published>2015-09-23T16:23:28.000Z</published>
    <updated>2015-09-24T14:38:38.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://kieran-hexo.qiniudn.com/hexo_25_1.png&quot; alt=&quot;DHT22温湿度传感器AM2302&quot;&gt;&lt;br&gt;AM2302数字温湿度传感器包括一个电容式感湿元件和一个NTC测温元件，并与一个高性能8位单片机相连接。 &lt;/p&gt;
&lt;p&gt;&lt;pre&gt;引脚 1 是VDD电源（3.3V~5.5V）&lt;br&gt;引脚 2 是SDA串行数据，双向口&lt;br&gt;引脚 3 是NC空脚&lt;br&gt;引脚 4 是GND地&lt;br&gt;&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;###安装下载&lt;br&gt;由于读取DHT22数据并转化的Python代码已经有现成的库了，我就不重复造轮子了&lt;br&gt;按顺序执行以下代码就行了&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;clone&lt;/span&gt; https://github.com/adafruit/Adafruit_Python_DHT.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; Adafruit_Python_DHT&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install build-essential python-dev&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo python setup.py install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后我们来看电路图&lt;br&gt;&lt;img src=&quot;http://kieran-hexo.qiniudn.com/hexo_25_2.png&quot; alt=&quot;DHT22温湿度传感器电路图&quot;&gt;&lt;br&gt;照着连接就行了&lt;br&gt;什么？你说看不懂电路图？别闹，看不懂还玩什么树莓派！&lt;br&gt;测试代码也很简单，看下面：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Adafruit_DHT &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; dht&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; time&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  time.sleep(&lt;span class=&quot;number&quot;&gt;2.5&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  h,t = dht.read_retry(dht.DHT22, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;Temp = %.1f&quot;C, Humidity = %.1f%%RH&#39;&lt;/span&gt; % (t, h)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;因为传感器是每隔两秒测一次数据的，所以我们sleep时间大于两秒就行了&lt;br&gt;运行效果就是&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pi@raspberrypi ~/dev/python $ sudo python dht.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Temp = 28.0&lt;span class=&quot;string&quot;&gt;&quot;C, Humidity = 63.3%RH&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Temp = 28.1&quot;&lt;/span&gt;C, Humidity = 63.1%RH&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Temp = 28.1&lt;span class=&quot;string&quot;&gt;&quot;C, Humidity = 63.1%RH&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Temp = 28.1&quot;&lt;/span&gt;C, Humidity = 63.1%RH&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Temp = 28.1&lt;span class=&quot;string&quot;&gt;&quot;C, Humidity = 62.9%RH&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Temp = 28.1&quot;&lt;/span&gt;C, Humidity = 63.0%RH&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Temp = 28.0&lt;span class=&quot;string&quot;&gt;&quot;C, Humidity = 63.0%RH&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;看看就懂了，have fun!&lt;/p&gt;
</content>
    
    <summary type="html">
    
      Kieran
    
    </summary>
    
      <category term="Raspberrypi" scheme="http://go.kieran.top/categories/Raspberrypi/"/>
    
    
      <category term="Raspberrypi" scheme="http://go.kieran.top/tags/Raspberrypi/"/>
    
      <category term="DHT22" scheme="http://go.kieran.top/tags/DHT22/"/>
    
      <category term="温湿度传感器" scheme="http://go.kieran.top/tags/%E6%B8%A9%E6%B9%BF%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>树莓派教程——LED灯</title>
    <link href="http://go.kieran.top/post/24/"/>
    <id>http://go.kieran.top/post/24/</id>
    <published>2015-09-22T17:43:37.000Z</published>
    <updated>2015-09-24T14:38:20.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://kieran-hexo.qiniudn.com/hexo_24_1.png&quot; alt=&quot;树莓派B+引脚图&quot;&gt;  &lt;/p&gt;
&lt;p&gt;###首先&lt;br&gt;我们来看一下引脚图&lt;br&gt;我的树莓派型号是B+，所以有40个针脚，如果你的只有26个针脚，没关系，图中的前26个针脚和你的功能是一样的&lt;br&gt;通过引脚图，可以知道这些GPIO口中，有一些引脚有固定的用法，比如有电压输出引脚，包括3.3V和5V，也有GND引脚，也就是通常说的地，还有一些引脚具有SPI功能，更多的引脚是general属性，也就是我们可以根据自己的用途定义引脚&lt;/p&gt;
&lt;p&gt;###第一次点亮LED灯&lt;br&gt;好，我们先只通过硬件实现点亮LED灯，不带程序&lt;br&gt;那利用哪些引脚呢？没错！就是3.3V的输出和GND引脚。把LED灯的两个引脚分别接3.3V和GND（正负极性勿接反），然后给树莓派上电！&lt;br&gt;效果就是下图&lt;br&gt;&lt;img src=&quot;http://kieran-hexo.qiniudn.com/hexo_24_2.jpg&quot; alt=&quot;树莓派点亮LED图&quot;&gt;&lt;/p&gt;
&lt;p&gt;###带呼吸灯效果的跑马灯&lt;br&gt;先看个演示视频吧&lt;/p&gt;
&lt;p&gt;&lt;video src=&quot;http://kieran-hexo.qiniudn.com/hexo_24.mp4&quot; width=&quot;100%&quot; controls=&quot;controls&quot; loop=&quot;loop&quot;&gt;Your browser does not support the video tag.&lt;/video&gt;&lt;br&gt;是否有点意思？&lt;br&gt;看视频差不多看到了引脚的接线方法，我这里再讲下吧&lt;br&gt;四个LED灯正极分别接 7,11,13,15 针脚，负极都接GND&lt;br&gt;其实很简单&lt;br&gt;然后直接看程序吧&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; RPi.GPIO &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; GPIO&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; time&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;GPIO.setmode(GPIO.BOARD)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;channels = [&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;] &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p = [&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; ch &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; channels:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  GPIO.setup(ch, GPIO.OUT)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  p[i] = GPIO.PWM(channels[i], &lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;#频率设为50Hz&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  p[i].start(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;#0是占空比&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; ch &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; dc &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;101&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        p[ch].ChangeDutyCycle(dc) &lt;span class=&quot;comment&quot;&gt;#更改占空比&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        time.sleep(&lt;span class=&quot;number&quot;&gt;0.005&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; dc &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        p[ch].ChangeDutyCycle(dc)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        time.sleep(&lt;span class=&quot;number&quot;&gt;0.005&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;except&lt;/span&gt; KeyboardInterrupt:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gpio.cleanup()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;All Cleanup!&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;关键代码都有注释，我就不浪费口舌了。玩的愉快！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      Kieran
    
    </summary>
    
      <category term="Raspberrypi" scheme="http://go.kieran.top/categories/Raspberrypi/"/>
    
    
      <category term="Raspberrypi" scheme="http://go.kieran.top/tags/Raspberrypi/"/>
    
  </entry>
  
  <entry>
    <title>树莓派初体验——配置篇</title>
    <link href="http://go.kieran.top/post/23/"/>
    <id>http://go.kieran.top/post/23/</id>
    <published>2015-07-21T17:25:12.000Z</published>
    <updated>2015-08-07T07:23:23.000Z</updated>
    
    <content type="html">&lt;div style=&quot;text-align:center&quot;&gt;&lt;img src=&quot;http://kieran-hexo.qiniudn.com/hexo_23_1.png&quot; alt=&quot;系统信息&quot;&gt;&lt;/div&gt;

&lt;p&gt;###登录&lt;br&gt;开机后，扫一下局域网ip，一共256个，几秒钟就扫出来了，机器名是raspberrypi&lt;br&gt;有很多现成的扫描软件，Win上ipscan,iOS上iNet等都可&lt;br&gt;ssh登录上去&lt;br&gt;默认用户名是pi,密码是raspberry&lt;/p&gt;
&lt;p&gt;###更换源，最重要的事！&lt;br&gt;不解释&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo nano /etc/apt/sources.list&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;编辑sources文件，将里面的内容替换成&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;deb http://mirror.nus.edu.sg/raspbian/raspbian/ wheezy main contrib non-free rpi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;deb-src http://mirror.nus.edu.sg/raspbian/raspbian/ wheezy main contrib non-free rpi&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;按ctrl+o保存，按ctrl+x退出，接着输入更新&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get upgrade&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;###时间修改&lt;br&gt;刚装上时间是UTC(Coordinated Universal Time)标准时间，而不是中国的CST(China Shanghai Time，东八区时间)&lt;br&gt;修改也很简单，输入三行命令就可以了&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo ln /usr/share/zoneinfo/Asia/Shanghai /etc/localtime&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo rm /etc/localtime&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;###VNC图形界面登录&lt;br&gt;下载vnc的服务器端&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install tightvncserver&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;安装过程中会提示是否安装，按小写的y后回车，继续安装。安装完成后会让你设置一个VNC登陆的密码，输入密码后还会问你是否输入个只能观看不能操作的密码，一般选择n，也就是不设置。整个安装完成之后输入&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vncserver -geometry 1024x680&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;后面那个参数就是你想显示的分辨率。命令成功执行后，ssh里会显示&lt;br&gt;这里说明一点，每执行一次上面的命令，就打开了一个VNC的端口。VNC默认的端口是5901，也就是说，上面命令执行完成后的编号表示你当前可以连接的端口号。这时候VNC的服务端已经安装完成了，你需要一个客户端来连接这个服务端。这里可以使用tightvnc view或者别的  &lt;/p&gt;
&lt;p&gt;IP是你的树莓派的IP，端口号就是上面ssh中New ‘X’ desktop is raspberrypi:1加上5900，因此现在可以连接的端口号是5901。当然你可以再次执行vncserver -geometry 1024x680，那么New ‘X’ desktop is raspberrypi:2，可以连接的端口号就是5901和5902，以此类推。点击连接按钮，需要输入前面设置过的VNC登陆密码&lt;/p&gt;
&lt;p&gt;###安装中文字库&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install ttf-wqy-zenhei&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;安装中文输入法&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install scim-pinyin&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;安装完毕后输入&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo raspi-config&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后选择change_locale，在Default locale for the system environment:中选择zh_CN.UTF-8,配置完成之后重启&lt;br&gt;重启完成好就可以在VNC连接上去后使用中文显示和中文输入法了，切换中文输入法一样也是ctrl+space&lt;/p&gt;
&lt;p&gt;###安装谷歌浏览器Chromium&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install chromium-browser  chromium&lt;span class=&quot;_&quot;&gt;-l&lt;/span&gt;10n&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;###连接无线，摆脱网线&lt;br&gt;先确定你的无线网卡已经被识别&lt;br&gt;然后VNC上去右上角有连接无线的配置，直接点进去连你的Wifi&lt;br&gt;建议使用360Wifi这种随时可以改账号密码的，换个地方也不用重新配置，比较方便&lt;br&gt;然后拔掉网线，重启下，噢耶，360Wifi控制界面会显示有新设备连接上来&lt;/p&gt;
&lt;p&gt;###获取CPU温度，RAM，内存&lt;br&gt;从网上抄了个&lt;br&gt;新建Python文件info.py&lt;br&gt;写入&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; os&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Return CPU temperature as a character string                                     &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getCPUtemperature&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    res = os.popen(&lt;span class=&quot;string&quot;&gt;&#39;vcgencmd measure_temp&#39;&lt;/span&gt;).readline()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;(res.replace(&lt;span class=&quot;string&quot;&gt;&quot;temp=&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;).replace(&lt;span class=&quot;string&quot;&gt;&quot;&#39;C\n&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Return RAM information (unit=kb) in a list                                      &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Index 0: total RAM                                                              &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Index 1: used RAM                                                                &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Index 2: free RAM                                                                &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getRAMinfo&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    p = os.popen(&lt;span class=&quot;string&quot;&gt;&#39;free&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        i = i + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        line = p.readline()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; i==&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;(line.split()[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Return % of CPU used by user as a character string                               &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getCPUuse&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;(str(os.popen(&lt;span class=&quot;string&quot;&gt;&quot;top -n1 | awk &#39;/Cpu\(s\):/ &amp;#123;print $2&amp;#125;&#39;&quot;&lt;/span&gt;).readline().strip()))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Return information about disk space as a list (unit included)                    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Index 0: total disk space                                                        &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Index 1: used disk space                                                        &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Index 2: remaining disk space                                                    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Index 3: percentage of disk used                                                 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getDiskSpace&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    p = os.popen(&lt;span class=&quot;string&quot;&gt;&quot;df -h /&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        i = i +&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        line = p.readline()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; i==&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;(line.split()[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# CPU informatiom&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CPU_temp = getCPUtemperature()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CPU_usage = getCPUuse()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# RAM information&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Output is in kb, here I convert it in Mb for readability&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RAM_stats = getRAMinfo()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RAM_total = round(int(RAM_stats[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]) / &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RAM_used = round(int(RAM_stats[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]) / &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RAM_free = round(int(RAM_stats[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]) / &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Disk information&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DISK_stats = getDiskSpace()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DISK_total = DISK_stats[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DISK_used = DISK_stats[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DISK_perc = DISK_stats[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&#39;__main__&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(&lt;span class=&quot;string&quot;&gt;&#39;CPU Temperature = &#39;&lt;/span&gt;+CPU_temp)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(&lt;span class=&quot;string&quot;&gt;&#39;CPU Use = &#39;&lt;/span&gt;+CPU_usage)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(&lt;span class=&quot;string&quot;&gt;&#39;RAM Total = &#39;&lt;/span&gt;+str(RAM_total)+&lt;span class=&quot;string&quot;&gt;&#39; MB&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(&lt;span class=&quot;string&quot;&gt;&#39;RAM Used = &#39;&lt;/span&gt;+str(RAM_used)+&lt;span class=&quot;string&quot;&gt;&#39; MB&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(&lt;span class=&quot;string&quot;&gt;&#39;RAM Free = &#39;&lt;/span&gt;+str(RAM_free)+&lt;span class=&quot;string&quot;&gt;&#39; MB&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(&lt;span class=&quot;string&quot;&gt;&#39;DISK Total Space = &#39;&lt;/span&gt;+str(DISK_total)+&lt;span class=&quot;string&quot;&gt;&#39;B&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(&lt;span class=&quot;string&quot;&gt;&#39;DISK Used Space = &#39;&lt;/span&gt;+str(DISK_used)+&lt;span class=&quot;string&quot;&gt;&#39;B&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(&lt;span class=&quot;string&quot;&gt;&#39;DISK Used Percentage = &#39;&lt;/span&gt;+str(DISK_perc))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;运行&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;python info.py&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;结果&lt;br&gt;&lt;img src=&quot;http://kieran-hexo.qiniudn.com/hexo_23_2.png&quot; alt=&quot;系统信息&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      Kieran
    
    </summary>
    
      <category term="Raspberrypi" scheme="http://go.kieran.top/categories/Raspberrypi/"/>
    
    
      <category term="Raspberrypi" scheme="http://go.kieran.top/tags/Raspberrypi/"/>
    
  </entry>
  
  <entry>
    <title>前端黑科技——纯clip-path制作属于你的个人动画</title>
    <link href="http://go.kieran.top/post/22/"/>
    <id>http://go.kieran.top/post/22/</id>
    <published>2015-07-19T17:25:12.000Z</published>
    <updated>2015-09-22T18:56:03.000Z</updated>
    
    <content type="html">&lt;p&gt;本页DEMO只兼容到webkit浏览器，请确保你的正确打开姿势&lt;/p&gt;
&lt;p&gt;&lt;iframe src=&quot;/post_demo/22.html&quot; frameborder=&quot;0&quot; width=&quot;100%&quot; height=&quot;548px&quot; scrolling=&quot;no&quot;&gt;&lt;/iframe&gt;&lt;br&gt;鼠标移上去即可看到效果  &lt;/p&gt;
&lt;p&gt;无聊翻着网站，突然一个叫&lt;a href=&quot;http://species-in-pieces.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;species-in-pieces&lt;/a&gt;的网站让我虎驱一震！  &lt;/p&gt;
&lt;p&gt;右击审查元素  bibibibi  &lt;/p&gt;
&lt;p&gt;仔细观察一番原来是clip-path实现的&lt;br&gt;CSS样式的clip-path来源于SVG&amp;lt;clipPath&amp;gt;元素，它们的本质都是剪切&lt;br&gt;每个人都知道剪切，那么clip-path实现的剪切有什么特别之处呢？  &lt;/p&gt;
&lt;h3 id=&quot;它的剪切元素可以是任意对象&quot;&gt;&lt;a href=&quot;#它的剪切元素可以是任意对象&quot; class=&quot;headerlink&quot; title=&quot;它的剪切元素可以是任意对象&quot;&gt;&lt;/a&gt;它的剪切元素可以是任意对象&lt;/h3&gt;&lt;p&gt;整个HTML页面，form表单，图片，一切都可以变成一块一块的  &lt;/p&gt;
&lt;h3 id=&quot;clip-path里面的数值变化可以触发transition&quot;&gt;&lt;a href=&quot;#clip-path里面的数值变化可以触发transition&quot; class=&quot;headerlink&quot; title=&quot;clip-path里面的数值变化可以触发transition&quot;&gt;&lt;/a&gt;clip-path里面的数值变化可以触发transition&lt;/h3&gt;&lt;p&gt;下面是一个简单的表单demo，3D变化，随机动态的改变其rotateXYZ、translate3D的值&lt;br&gt;&lt;img src=&quot;http://7sblvv.com1.z0.glb.clouddn.com/22.gif&quot; alt=&quot;demo&quot;&gt;  &lt;/p&gt;
&lt;p&gt;这里只是简单的演示，复杂的还是建议去看看&lt;br&gt;网易小哥的博文 &lt;a href=&quot;http://leeluolee.github.io/2015/04/01/render-3d-use-clip-path/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://leeluolee.github.io/2015/04/01/render-3d-use-clip-path/&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      Kieran
    
    </summary>
    
      <category term="CSS3" scheme="http://go.kieran.top/categories/CSS3/"/>
    
    
      <category term="CSS3" scheme="http://go.kieran.top/tags/CSS3/"/>
    
  </entry>
  
  <entry>
    <title>结果</title>
    <link href="http://go.kieran.top/post/21/"/>
    <id>http://go.kieran.top/post/21/</id>
    <published>2015-06-22T11:56:03.000Z</published>
    <updated>2015-06-22T13:56:02.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;日子若是一天天过&lt;br&gt;单调的疲乏是一种痛&lt;br&gt;日子若不一天天过&lt;br&gt;谁又会懂个中苦辣辛酸&lt;br&gt;越是压抑得最深的情绪&lt;br&gt;越容易在苍白的现实中不甘心地肆虐&lt;br&gt;越是苦涩的艰辛往事&lt;br&gt;越喜欢在狂欢中变成一个空洞的眼神  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;时隔两年半再看到这段话&lt;br&gt;脑海中那个空洞的眼神依然挥之不去&lt;br&gt;世间有太多太多的事与愿违&lt;br&gt;努力争取到头来什么都没得到&lt;br&gt;亦或是倍加珍惜 依然离你远去  &lt;/p&gt;
&lt;p&gt;有人说&lt;br&gt;“以前认为努力是没有天赋的行为，现在才知道努力是最大的天赋。”&lt;br&gt;你努力了，你以为自己很努力了&lt;br&gt;但是结果你失败了&lt;br&gt;因为别人比你更努力&lt;br&gt;作为失败者的我自然无话可说&lt;br&gt;你永远也无法知道别人到底有多努力&lt;br&gt;你永远也无法知道得付出多少努力才能超过别人&lt;br&gt;你唯一能做的就是比现在更努力&lt;br&gt;结果仍然可能会是失败&lt;br&gt;但是 你不努力，&lt;br&gt;你连失败的资格都没有  &lt;/p&gt;
&lt;p&gt;如果不愿失败 请不要哀叹&lt;br&gt;如果不想后悔 请不要徘徊&lt;br&gt;有人说成长就是从前得不到的 现在不想要了&lt;br&gt;那么我想我还没长大&lt;br&gt;还注定要为那些烦恼奋斗许多  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;———- 还给两年前&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      Kieran
    
    </summary>
    
      <category term="Misc" scheme="http://go.kieran.top/categories/Misc/"/>
    
    
      <category term="Misc" scheme="http://go.kieran.top/tags/Misc/"/>
    
  </entry>
  
</feed>
